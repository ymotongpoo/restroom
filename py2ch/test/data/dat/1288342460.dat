デフォルトの名無しさん<>sage<>2010/10/29(金) 17:54:20 <> Pythonオフィシャルサイト <br> http://www.python.org/ <br> 日本Pythonユーザ会 <br> http://www.python.jp/Zope/ <br> まとめWiki <br> http://python.rdy.jp/ <br> 関連スレ <br> http://find.2ch.net/?BBS=ALL&TYPE=TITLE&STR=python <br> 前スレ <br> http://hibari.2ch.net/test/read.cgi/tech/1280973179/ <>Pythonのお勉強 Part40
デフォルトの名無しさん<>sage<>2010/10/29(金) 17:55:47 <> 以上 <>
デフォルトの名無しさん<>sage<>2010/10/29(金) 19:54:31 <> <a href="../test/read.cgi/tech/1288342460/1" target="_blank">&gt;&gt;1</a>さん乙っす！ <>
デフォルトの名無しさん<>sage<>2010/10/30(土) 09:23:11 <> 　　 ┌─┐ <br> 　　 │●│ <br> 　　 └─┤ <br> 　　　_ 　 ∩ <br> 　　( ﾟ∀ﾟ)彡 <br> ┌─┬⊂彡 <br> │●│　おっぱい！おっぱい！ <br> └─┘  <>
デフォルトの名無しさん<>sage<>2010/10/30(土) 09:58:07 <> 「ここでの議論・３大要素」 <br> "幸福", "自由", "美徳" <br> 幸福の最大化 <br> 自由の尊重 <br> 美徳の涵養 <>
デフォルトの名無しさん<>sage<>2010/10/30(土) 13:10:22 <> http://python.rdy.jp/  <br> これって更新されてんの？ <>
デフォルトの名無しさん<>sage<>2010/10/30(土) 13:12:12 <> ああ <br> 更新はされてるのか <br> だけど↓この情報がかなり古くなってるな <br> http://python.rdy.jp/wiki.cgi?page=%B2%E1%B5%EE%A5%ED%A5%B0 <br>  <>
デフォルトの名無しさん<>sage<>2010/10/30(土) 13:13:33 <> python.rby.jp <>
デフォルトの名無しさん<>sage<>2010/10/30(土) 13:23:34 <> python.rby.pl <>
デフォルトの名無しさん<>sage<>2010/10/30(土) 13:40:49 <> python.ruby.jp <>
デフォルトの名無しさん<>sage<>2010/10/30(土) 14:09:44 <> <a href="../test/read.cgi/tech/1288342460/6" target="_blank">&gt;&gt;6</a> <br> 管理放棄されてるので更新不能 <>
デフォルトの名無しさん<>sage<>2010/10/31(日) 03:50:29 <> <a href="../test/read.cgi/tech/1288342460/1" target="_blank">&gt;&gt;1</a>乙なり <br> なんで3DCGツールってpython採用してるの多いんだろうか <>
デフォルトの名無しさん<>sage<>2010/10/31(日) 08:16:04 <> <a href="../test/read.cgi/tech/1288342460/1" target="_blank">&gt;&gt;1</a> <br> 乙！ <br> python.jpいらなくね？ <>
デフォルトの名無しさん<>sage<>2010/10/31(日) 09:05:41 <> ドジャンゴ脳はこれだから…。 <>
デフォルトの名無しさん<>sage<>2010/11/01(月) 14:39:42 <> http://twitter.com/yukihiro_matz/statuses/29317109670 <br>  <br> yukihiro_matz: 英語圏でRubyとPythonを比較する記事を見ることが少なくなってきた <br> のは、RubyとPythonでクラスタが分離してきたからか。逆に日本語でRubyとPythonを <br> 比較 する記事を見かけるのは国内でのPythonの地位が向上したからか。 <br>  <br> 　　　　　　　　　　　　 　 ∩＿ <br> 　　　　　　　　　　　　　　〈〈〈　ヽ <br> 　　　　　　＿＿＿_　　　〈⊃　　} <br> 　　　　 ／⌒　　⌒＼　　 |　　 | <br> 　　　／（ ●） 　（●）＼　 !　　 ! <br> 　 ／ :::::⌒（__人__）⌒:::::＼|　　 l <br> 　 |　　　　　|r┬-| 　 　 　 | 　／　＜こいつ最高にアホだお <br> 　 ＼ 　 　　｀ ー'´ 　 　 ／／ <br> 　　/　＿＿　 　　　　　　/ <br> 　　(＿＿＿）　　　　　　/  <>
デフォルトの名無しさん<>sage<>2010/11/01(月) 15:06:26 <>  <br> 　　　　　　　　　　　　 　 ∩＿ <br> 　　　　　　　　　　　　　　〈〈〈　ヽ <br> 　　　　　　＿＿＿_　　　〈⊃　　} <br> 　　　　 ／⌒　　⌒＼　　 |　　 | <br> 　　　／（ ●） 　（●）＼　 !　　 ! <br> 　 ／ :::::⌒（__人__）⌒:::::＼|　　 l <br> 　 |　　　　　|r┬-| 　 　 　 | 　／　＜こいつ最高にアホだお <br> 　 ＼ 　 　　｀ ー'´ 　 　 ／／ <br> 　　/　＿＿　 　　　　　　/ <br> 　　(＿＿＿）　　　　　　/  <>
デフォルトの名無しさん<>sage<>2010/11/01(月) 18:37:13 <> マルチするお前モナ <>
デフォルトの名無しさん<>sage<>2010/11/01(月) 21:02:59 <> またガラパゴス化！ <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 09:20:56 <> pythonしょぼすぎワロタ(ww <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 15:00:27 <> pass <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 16:19:04 <> 日本のPythonがドジャンゴ脳に浸食されているの？ <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 16:26:13 <> pass <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 16:53:49 <> <a href="../test/read.cgi/tech/1288342460/15" target="_blank">&gt;&gt;15</a> <br> Python信者は何がしたいの？ <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 23:05:57 <> 信者とか言っちゃう時点でRuby教徒乙 <br> Pythonと同列で扱われてると勘違いしてるのは <br> 同じ日本人として恥ずかしいわ、それも言語開発者まで。 <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 23:14:19 <> くだらない話はやめて、Python のお勉強しようよ。 <br>  <br>  <br>  <br>  <br>  <br>  <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 23:15:31 <> 俺Pythonエバンジェリストだけどなんか質問ある？ <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 23:20:11 <> 余計なことはしないでくれるかな。 <br> 必要な人は勝手に使うと思うから。 <br>  <>
デフォルトの名無しさん<>sage<>2010/11/02(火) 23:36:32 <> pass <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 00:50:09 <> <a href="../test/read.cgi/tech/1288342460/24" target="_blank">&gt;&gt;24</a> <br> Ruby教徒とか言っちゃう時点でPython信者乙 <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 02:03:06 <> くだすれが本スレ化してここがくだらないすれになっているとはこれいかに <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 04:42:31 <> <a href="../test/read.cgi/tech/1288342460/30" target="_blank">&gt;&gt;30</a> <br> それでも難しめの質問が来たらそれなりに対応してるから大丈夫 <br>  <br> たぶん <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 12:20:15 <> [[0]*5 for _ in range(5)] <br> みたいに参照しない変数の名前を_にするのって一般的？ <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 12:24:38 <> Haskell屋さんか何か？ <br> 自分は気にせずxとかにしてるけど <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 12:50:47 <> (_, foo, bar) = tup とか便利だし <br> pylintやらpycheckerが_ならUnused variableの警告を出さないんだよね <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 12:57:12 <> Python Cookbook の中の人のお答え <br> http://stackoverflow.com/questions/2745018/python-is-there-a-dont-care-symbol-for-tuple-assignments <br>  <br> <a href="../test/read.cgi/tech/1288342460/34" target="_blank">&gt;&gt;34</a>にはハワイ旅行がプレゼントされますん <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 12:58:25 <> <a href="../test/read.cgi/tech/1288342460/32" target="_blank">&gt;&gt;32</a> <br> 参照しない変数を_にするのはむしろ推奨されてると思ってた <br> ……けど公式ドキュメントで言及されてるのは見当たらない <br> ソースはどこなんだろう <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 13:03:10 <> そういえば <br> foo = 0 <br> foo, foo = 1, 2　# foo → 2 <br> みたいなコードが通るようだが多重代入の評価順って常に先頭からかな？ <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 13:08:09 <> はい <>
32<>sage<>2010/11/03(水) 13:13:17 <> そうそう、ふと出会ったPythonのコードで_使ってるの見て <br> unused variableも出なくなるし便利だと思ったんだけど <br> ドキュメント類でそういうの見たことがなかったからどうなんだろうと <br> ありがとう <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 13:38:08 <> <a href="../test/read.cgi/tech/1288342460/34" target="_blank">&gt;&gt;34</a> <br> (foo, bar) = tup[1:3] <br> じゃだめなん？ <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 13:48:20 <> <a href="../test/read.cgi/tech/1288342460/34" target="_blank">&gt;&gt;34</a>のほうがtupleの第一要素はいらないという意図が明確になるし <br> 添字でミスることもなくなるから望ましいと思われ <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 14:13:03 <> <a href="../test/read.cgi/tech/1288342460/40" target="_blank">&gt;&gt;40</a> <br> それなら <br> (foo, bar) = tup[1:] <br> で十分だし、「先頭を捨てる」意図をよりはっきり示せるんじゃないの <br>  <br> が、tup[1:]の時点でコピーが発生するので、2度コピーを行うことになるよ <br>  <br> Pythonはimmutableなtupleのスライスであっても愚直にコピーするので <br> スライスはO(n) <br>  <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 17:44:18 <> それいつのはなし <>
デフォルトの名無しさん<>sage<>2010/11/03(水) 17:57:20 <> <a href="../test/read.cgi/tech/1288342460/43" target="_blank">&gt;&gt;43</a> <br> それって何のこと <>
デフォルトの名無しさん<><>2010/11/05(金) 04:34:17 <> Rubyのが明らかに簡潔に書けるよなぁ <>
デフォルトの名無しさん<>sage<>2010/11/05(金) 04:42:27 <> subprocess.Popen について質問です <br> perl とかで open("cat hoge.txt | grep fuga |", "rb") 見たいな <br> 複数のコマンドをパイプ繋いだものを実行するとき <br> subprocess.Popen の一つ目の引数に <br> 'cat hoge.txt | grep fuga |'.split() を指定しても <br> 次のエラーが出て止まってしまいます <br> OSError: [Errno 2] No such file or directory <br> どうすればよいのでしょうか？ <>
デフォルトの名無しさん<>sage<>2010/11/05(金) 05:52:53 <> shell=True <>
デフォルトの名無しさん<>sage<>2010/11/05(金) 06:14:33 <> <a href="../test/read.cgi/tech/1288342460/47" target="_blank">&gt;&gt;47</a> <br> できました！！ <br> ありがとうございました！！！ <br> このスレで質問して本当に良かったです！！！！！ <>
デフォルトの名無しさん<>sage<>2010/11/05(金) 15:02:55 <> すげーエスパー <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 00:01:32 <> 問題 <br> 関数の引数として値渡しとなるオブジェクトをすべて述べよ <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 00:03:03 <> <a href="../test/read.cgi/tech/1288342460/50" target="_blank">&gt;&gt;50</a> <br> 1. おぶじぇくとぜんぶ <br> 2. 述べよだと？てめぇが述べろよ！ <br> 3. もう秋田 <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 00:53:14 <> 質問、初心者です <br>  <br> for i in range(200): <br>     try: <br>         print i <br>  <br> こんな感じの例外処理をしましたところ <br> unexpected indentation error <br> と怒られました <br> 余計なインデントがある、あるいはtabとスペースインデントが混在しているときに起きるらしいですが <br> （この文ではスペース４つですが、）実際はタブのみでつくっていて、そんなはずはないのにエラーが帰ってきます <br> なにがいかんのでしょうか？ <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 00:55:56 <> おおう、スペースが消えとる <br> tryの前にスペース４つ（実際はタブ一つ） <br> printの前にスペース８つ（実際はタブ２つ） <br> です <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 00:57:27 <> <a href="../test/read.cgi/tech/1288342460/52" target="_blank">&gt;&gt;52</a> <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 00:58:21 <> exceptかfinallyを書けばいい <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 00:58:23 <> まず初めにPythonではTabスペースが嫌われてる <br> そして4半角空白が一般的でエディタ側で設定はPython使いの常識 <br> 単純にエディタをまともな物にすればそういうエラーは出ない筈 <br> それに私はエスパーでないので細かい例外は分かりません <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 00:58:48 <> exceptは書いてる？ <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 01:00:46 <> except書いたら通りました <br> 勉強不足でした、すみません <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 11:55:49 <> <a href="../test/read.cgi/tech/1288342460/52" target="_blank">&gt;&gt;52</a> <br> たしかにその例なら <br> &gt;unexpected indentation error <br> じゃなくて、「exceptまたはfinallyが必要です」というメッセージにしてほしいところだな。 <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 12:34:46 <> うちだとこれが出た <br> IndentationError: unexpected unindent <br>  <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 12:46:23 <> うわーん、きもいよー <br>  <br> &gt;&gt;&gt; a = b = [] <br> &gt;&gt;&gt; a += [1] <br> &gt;&gt;&gt; print a,b <br> [1] [1] <br> &gt;&gt;&gt; a = b = [] <br> &gt;&gt;&gt; a = a + [1] <br> &gt;&gt;&gt; print a,b <br> [1] [] <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 12:48:33 <> どこが? <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 12:57:01 <> &gt;&gt;&gt; a = b = [] <br> &gt;&gt;&gt; a.append(1) <br> &gt;&gt;&gt; print a,b <br> [1] [1] <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 13:06:21 <> そうならないようにするのは簡単だけど <br> たしかにきもい <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 13:37:17 <> http://docs.python.org/reference/simple_stmts.html#augmented-assignment-statements <br> http://www.dabeaz.com/errata.html の 75 ページ <br>  <br> 直感で += を使ってこなかった漏れ大勝利 <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 13:46:47 <> 漏れとはなんですか？ <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 13:49:54 <> このスレで初めて俺が答えられる内容だ。 <br> 漏れ＝オレ <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 13:56:06 <> <a href="../test/read.cgi/tech/1288342460/65" target="_blank">&gt;&gt;65</a> <br> だよな <br> += の必要な場面では append が正解 <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 14:11:33 <> ありがとうございました <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 14:13:57 <> <a href="../test/read.cgi/tech/1288342460/63" target="_blank">&gt;&gt;63</a> <br> それは普通だろ。 <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 14:37:11 <> JavaのVectorでも同じ事が言えるし。MutableでCOWじゃないコンテナ型は防御的コピーが必須。 <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 14:56:53 <> この文脈でCOWってどういう意味？ <br>  <br> COWっていうとページメモリの管理（ユーザには見えない）しか思い浮かばないんだが。 <>
デフォルトの名無しさん<>sage<>2010/11/06(土) 14:58:55 <> <a href="../test/read.cgi/tech/1288342460/72" target="_blank">&gt;&gt;72</a> <br> copy-on-write <br> a = b = [] とかやると write するまでは同じ [] を指すけど <br> a に変更を加えようとした時点でコピーされて <br> a と b はべつのものを指すようになる <br> ということを言いたいんだと思われる <br>  <br> ただそれと上での議論がどう関係あるのかはまったくの <br>  <br> 謎 <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 00:50:55 <> &gt;&gt;&gt; a = a + [1] <br> はリストaとリスト[1]をマージした新しいリストを生成しているから <br> &gt;&gt;&gt; a += [1] <br> の既存のリストaに追加とは異なる結果になるのはふつうだと思うが？ <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 01:11:44 <> リストに限定するなら <br> a.append(1) と a += [1] では <br> 後者が余分にリストを生成する必要があることを除けば同じ意味という理解でおk? <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 01:18:57 <> __iadd__() を実装してる型の場合は、名前の通り += が inplace add <br> ない場合はかわりに __add__() を使い、x += y は x = x + y と同じになる <br> のだと思った <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 01:28:04 <> <a href="../test/read.cgi/tech/1288342460/76" target="_blank">&gt;&gt;76</a> <br> なるほど、解説thx <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 01:34:30 <> こういうのがあるから演算子のオーバーロードは怖くて使いたくない <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 02:24:20 <> http://www.kh.rim.or.jp/~nagamura/misc/stroustrup-interview.html <br> Bjarne Stroustrupもオーバーロードは使うなって言ってるしね！ <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 04:44:15 <> しね！  <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 12:11:58 <> みんなのPython改訂版（第3版）買ったんだけど、正誤表がまとまってるところない？ <br> 公式サイトにはないみただけど。 <>
デフォルトの名無しさん<>sage<>2010/11/07(日) 12:19:06 <> <a href="../test/read.cgi/tech/1288342460/76" target="_blank">&gt;&gt;76</a> <br> 理解した。thx <>
デフォルトの名無しさん<>sage<>2010/11/08(月) 09:37:54 <> C#使ってて、Python勉強しようかなと思ってる私に、型付けの違いからくる物を除いて <br> Pythonのこの書きかたが良い <br> みたいな物を是非教えてもらえませんか。 <br>  <>
デフォルトの名無しさん<>sage<>2010/11/08(月) 10:25:45 <> <a href="../test/read.cgi/tech/1288342460/83" target="_blank">&gt;&gt;83</a> <br> if 3 &lt; x &lt;= 5: みたいな範囲を指定する条件式。 <br> とっつきにくいけど慣れたら便利な内包表記。 <br> めったに使わないけど、使う場面ではとてもクールなfor文のelse節。 <br> 後は名前付き引数はC#にもあるけど、さらにシーケンスやマッピングから引数に展開したり <br> キャプチャできる *x, **y  <>
デフォルトの名無しさん<>sage<>2010/11/08(月) 13:28:32 <> <a href="../test/read.cgi/tech/1288342460/83" target="_blank">&gt;&gt;83</a> <br> PEP8でぐぐりましょう <br>  <br>  <br>  <>
デフォルトの名無しさん<>sage<>2010/11/08(月) 14:12:04 <> <a href="../test/read.cgi/tech/1288342460/84" target="_blank">&gt;&gt;84</a> <br> <a href="../test/read.cgi/tech/1288342460/85" target="_blank">&gt;&gt;85</a> <br> ありがとうございます、頑張ってみます <>
デフォルトの名無しさん<>sage<>2010/11/08(月) 14:47:33 <> （^ω^）ﾍﾟｯﾌﾟ！ <>
デフォルトの名無しさん<>sage<>2010/11/08(月) 22:49:01 <> ヽ( ＾ω＾)ノ ﾍﾟｯﾌﾟﾍﾟｯﾌﾟ! <>
デフォルトの名無しさん<><>2010/11/10(水) 23:40:27 <> Pythonがよくわからないし、 <br> インデントでブロックを表現するというきもさのため、 <br> Rubyを使うようにしたほうがいいな <>
デフォルトの名無しさん<>sage<>2010/11/10(水) 23:42:25 <> また頭の悪いruby厨か <>
デフォルトの名無しさん<>sage<>2010/11/11(木) 00:57:45 <> <a href="../test/read.cgi/tech/1288342460/89" target="_blank">&gt;&gt;89</a> <br> 頭悪そう <>
デフォルトの名無しさん<>sage<>2010/11/11(木) 16:45:26 <> Brainf*ck を Python-oneliner にコンパイルする Python-oneliner - YoshioriのBlog <br> http://d.hatena.ne.jp/Yoshiori/20100208/1265628616 <br>  <br>  <br> Pythonワンライナーキモイ <>
デフォルトの名無しさん<>sage<>2010/11/11(木) 23:54:53 <> えっ <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 01:10:06 <> RubyはVMが進化したけどPythonはちっとも進化しないよな。 <br> 時代に取り残されている感じ。 <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 01:20:48 <> Unladen Swallowは？ <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 01:21:31 <> どちらかというと、RubyのVMがやっとPythonに追いついた感じ。 <br> まだ、バイトコードキャッシュをファイルに書いてモジュールの読み込みを高速化する機能が <br> Rubyには無いからたくさんモジュールを読み込むプログラムの起動が遅いけど。 <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 01:54:02 <> <a href="../test/read.cgi/tech/1288342460/95" target="_blank">&gt;&gt;95</a> <br> まだ糞 <br> 生暖かく見守ろう <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 02:01:10 <> PyPy方面は一歩先んじてる気がする <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 04:48:28 <> <a href="../test/read.cgi/tech/1288342460/96" target="_blank">&gt;&gt;96</a> <br> Ruby見てるとロード遅い遅いという人いるけど、 <br> バイトコード化しておいておけるだけでも大分違うと思うんだけどねえ <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 09:33:11 <> ipython コンソールで日本語unicodeな文字列って <br> print すると u'\ff11...' みたいな感じになっちゃいますが <br> これを読めるようにする方法ってありますか? <br> (コンソールのencodeを指定する?) <br>  <br> ipython で駄目なら python コンソールでも... <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 09:35:18 <> 補足 <br>  <br> 一応 sys.stdout.write() で unicode_string.encode('euc_jp') を <br> 放り込むみたいなやり方では出来るのは知ってるんですが <br> print も対応してくんねーかなーということでして <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 10:24:38 <> repr(hoge).encode('unicode-escape') <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 10:32:56 <> &gt;102 <br> print repr(hoge).encode('unicode-escape') <br> なんてすると \ff11 が \\ff11 みたいに <br> もっと読めなく(?)なっちゃいません? <br>  <br> 少なくとも print とかでデフォルトで unicode-escape が <br> かかるのを無しにしたいってことなんですが <br>  <br> sys.setdefaultencoding するのかな… <br> (それだと site.py でしか出来ないですよね?) <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 10:52:17 <> あ，100 で言っているのは言い方を間違えてることに気づきました <br>  <br> print unicode_str は既に日本語で表示されてるんです <br> (LANG=ja_JP.eucJP が効いているのか，sys.getdefaultencoding() は euc_jp です) <br>  <br> 本当にやりたかったことは string 単体では明示的に encode しなくても表示できるんだから <br> textlist = [u'にほんご',u'あんなこと',...] <br> textdic = [1: u'にほんご',2:u'こんなこと',...] <br> print textlist <br> print textdic <br> みたいなのが "読める日本語" で出来ないかということです <br>  <br> 一人でくどくど書いてすみませんがよろしくお願いします <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 11:13:57 <> &gt;102 をヒントにもうすこし考えてみたら… <br>  <br> textlist = [u'にほんご',u'あんなこと',...] <br> print repr(textlist).decode('unicode-escape') <br>  <br> ってやると期待通りの <br> [u'にほんご',u'あんなこと',...] <br> が出来るんですね <br>  <br> ちと面倒くさいですが、これだけでもだいぶ作業しやすくなりました <br>  <br> 引き続きアドバイスなどあればよろしくです <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 11:21:37 <> ごめん間違えてた <br> encode -&gt; decode で正解 <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 11:25:56 <> <a href="../test/read.cgi/tech/1288342460/103" target="_blank">&gt;&gt;103</a> <br> &gt;sys.setdefaultencoding するのかな… <br> &gt;(それだと site.py でしか出来ないですよね?)  <br>  <br> reload(sys); <br> sys.setdefaultencoding('euc_jp') <>
デフォルトの名無しさん<>sage<>2010/11/12(金) 12:45:52 <> IPythonとPythonでprintは変わらないと思うが。。。 <br> IPython 0.10でunicodeリテラルを書けないという問題とは違う？ <br> http://dsas.blog.klab.org/archives/51390187.html <>
デフォルトの名無しさん<>sage<>2010/11/14(日) 11:24:41 <>  <br> Pythonで Helloworld　プロジェクトを作成し <br> 実行したところ Console には <br>  <br> http://localhost:8080 <br>  <br> と表示されるのですがブラウザ上には何も表示されません。 <br>  <br>  <br> また、直接ブラウザに http://localhost:8080　と入力し <br> 実行すると　selef.response.out.write('hoge') <br> とPythonのスクリプトが実行されている様です。 <br>  <br> どうすればDebug実行時にブラウザがEclipse上で <br> 自動で起動する様になりますか？ <br>  <>
デフォルトの名無しさん<>sage<>2010/11/14(日) 15:12:06 <> multi <>
デフォルトの名無しさん<>sage<>2010/11/15(月) 02:17:37 <> Pythonicじゃない技たち <br> 1. 複数の式を1つの式にまとめる <br> 1.1 リスト、タプルを使う <br> &gt;&gt;&gt; (expr1, expr2, ...) <br> 式の最後の値を返すようにしたいときは <br> &gt;&gt;&gt; (expr1, expr2, ..., exprn)[-1] <br>  <br> 1.2 and/orを使う <br> 値が必ず真だと分かっている場合→andでつなぐ <br> 値が必ず偽(値を返さない=None含む)と分かっている場合→orでつなぐ <br> 分からない場合→[expr]のように、1要素のリストにしてandでつなぐ <br>  <br> 2. 式の内部で使う、変数のようなものを作る <br> 2.1 lambdaの引数を変数として使う <br> 例: a = Foo();b = a.foo() + a.bar(); のbに相当 <br> &gt;&gt;&gt; (lambda a: a.foo() + a.bar())(Klass()) <br>  <br> 2.2 変数を1要素のリストにして内包表記で使う <br> &gt;&gt;&gt; [a.foo() + a.bar() for a in [Foo()]][-1] <br>  <br> 3. 無名関数での再帰呼び出し <br> 例えば <br> def fact(n): return n*fact(n-1) if n else 1 <br> fact(5) <br> は、 <br> def fact2(local_fact2, n): return n*local_fact2(local_fact2, n) if n else 1 <br> fact2(local_fact2, 5) <br> と理解できるので、関数の中身からグローバルなシンボルfact2が消せる。すなわち、こうできる <br> &gt;&gt;&gt; (lambda f, n: f(f, n))(lambda f, n: n*f(f, n-1) if n else 1, 5) <br>  <br> 他に何か知ってたら教えて <>
デフォルトの名無しさん<>sage<>2010/11/15(月) 02:19:26 <> 訂正 <br> &gt; fact2(local_fact2, 5) <br> &gt; と理解できるので、関数の中身からグローバルなシンボルfact2が消せる。すなわち、こうできる <br>  <br> 誤 fact2(local_fact2, 5) <br> 正 fact2(fact2, 5) <>
デフォルトの名無しさん<>sage<>2010/11/15(月) 02:20:46 <> pythonワンライナーの人がそんな感じのTipsを書いてたよ <>
デフォルトの名無しさん<>sage<>2010/11/15(月) 02:22:13 <> ttp://www.nishiohirokazu.org/blog/2006/08/python_12.html <br> かな。おもしろそう。ありがとう <>
デフォルトの名無しさん<>sage<>2010/11/15(月) 02:46:19 <> pythonクックブックにもなんかトリッキーなことあったなあ <br> どういうのか忘れたけど、普通は使うなって書いてあったのなんだったっけ <br> 目次から察するに5.11クイックソートを3行で示す　かな <>
デフォルトの名無しさん<>sage<>2010/11/15(月) 02:46:58 <> Ｐｙｔｈｏｎってどうしてこんなにコードが汚いの？ <>
デフォルトの名無しさん<>sage<>2010/11/15(月) 02:49:58 <> カスはLLバトルロワイヤルスレから出てくんなよ <>
デフォルトの名無しさん<>sage<>2010/11/16(火) 00:05:51 <> 誰かH3Dについて日本語でまとめてくれんかな <br> 壁に突き当たる度に英語力の無さが本気で恨めしく感じるわ <>
デフォルトの名無しさん<>sage<>2010/11/16(火) 03:16:09 <> <a href="../test/read.cgi/tech/1288342460/111" target="_blank">&gt;&gt;111</a> <br> なぜ <br> &gt;def fact(n): return n*fact(n-1) if n else 1 <br> が <br> &gt;def fact2(local_fact2, n): return n*local_fact2(local_fact2, n) if n else 1 <br> になるのかわからない。 <br> def fact2(local_fact2, n): return n*fact2(local_fact2, n) if n else 1 <br> ならわかるけど。 <br>  <>
デフォルトの名無しさん<>sage<>2010/11/16(火) 03:19:09 <> ああ<a href="../test/read.cgi/tech/1288342460/112" target="_blank">&gt;&gt;112</a>で訂正されてたのか了解 <br>  <br>  <>
デフォルトの名無しさん<>sage<>2010/11/16(火) 03:29:30 <> <a href="../test/read.cgi/tech/1288342460/111" target="_blank">&gt;&gt;111</a> <br> &gt;3. 無名関数での再帰呼び出し <br> &gt;例えば <br> &gt;def fact(n): return n*fact(n-1) if n else 1 <br> &gt;fact(5) <br> &gt;は、 <br> &gt;def fact2(local_fact2, n): return n*local_fact2(local_fact2, n) if n else 1 <br> &gt;fact2(fact2, 5) <br> &gt;と理解できるので、関数の中身からグローバルなシンボルfact2が消せる。すなわち、こうできる <br> &gt;&gt;&gt;&gt; (lambda f, n: f(f, n))(lambda f, n: n*f(f, n-1) if n else 1, 5) <br>  <br> この説明はわかりにくいなあ。もっとわかりやすく説明してほしかった。 <br>  <br>  <>
デフォルトの名無しさん<>sage<>2010/11/16(火) 03:29:36 <> 早漏 <>
デフォルトの名無しさん<>sage<>2010/11/16(火) 14:58:15 <> <a href="../test/read.cgi/tech/1288342460/121" target="_blank">&gt;&gt;121</a> <br> きっちり説明するの、かなり難しそうだったから諦めたんだよ＞＜ <br>  <br> 一応、説明すると、 <br> なんで変な事しないと無名関数で再帰関数が作れないかというと、 <br> 再帰関数 → 関数の内部に自分自身を呼び出す処理が出てくる <br> 無名関数 → 自分自身の名前がない <br> 普通、関数を呼び出すとき、名前を使うけど、そしたら名前がない関数をどうやって呼び出す？ <br> ということになる。 <br>  <br> そこで、2.1の、lambdaの引数を変数に使うことを考える。 <br> 関数の引数に、自分自身が入っていたら、自分自身に名前がついたことになるから。 <br>  <br> そこで、 <br> def fact(n): return n*fact(n-1) if n else 1 <br> に自分自身を入れる引数(local_fact2)を追加して、関数の中で自分自身を直接使わないように変えたのがfact2 <br> def fact2(local_fact2, n): return n*local_fact2(local_fact2, n) if n else 1 <br> ここで、fact2はもはやlambda式で書けて、 <br> fact2 = lambda local_fact2, n: n*local_fact2(local_fact2, n) if n else 1 <br>  <br> local_fact2は、自分自身を入れるために追加したのだから、これを使うときは <br> fact2(fact2, N) <br> のように使う。fact2が2回出てきて気持ち悪いので、lambda式を変数代わりに使ってまとめると、 <br> (lambda f, n: f(f, n))(fact2, N) <br> になる。 <br>  <br> fact2にlambda式を入れると <br> (lambda f, n: f(f, n))(lambda local_fact2, n: n*local_fact2(local_fact2, n) if n else 1, N) <br> になる。 <>
123<>sage<>2010/11/16(火) 15:05:48 <> &gt; ここで、fact2はもはやlambda式で書けて、 <br> うーん、ここ微妙だなぁ。もともとfactだってlambdaで書けるから。 <br> むしろ大事なのは、fact2が自分自身を知らなくても、 <br> 引数がちゃんと教えてくれさえすれば自分自身を呼び出せるようになったことかなぁ。  <>
デフォルトの名無しさん<>sage<>2010/11/16(火) 15:12:34 <> 一言Yコンビネータといえば済む <br> λ計算がらみは挙げていけばキリがないだろう <br> 自然数やcons/carをλで表現したり <>
デフォルトの名無しさん<>sage<>2010/11/16(火) 15:54:14 <> <a href="../test/read.cgi/tech/1288342460/125" target="_blank">&gt;&gt;125</a> <br> <a href="../test/read.cgi/tech/1288342460/111" target="_blank">&gt;&gt;111</a>はYコンビネータじゃないよ。 <>
デフォルトの名無しさん<>sage<>2010/11/17(水) 05:58:31 <> Yコンビネータって、聞いたことはあるが <br> イマイチ分からんのだが、Pythonでも書けるものなの？ <br> なんか関数型言語でしか書かれないイメージがある <>
デフォルトの名無しさん<>sage<>2010/11/17(水) 08:11:45 <> 意味的には、Y f = f (Y f) 。 <br> そんなに難解なもんでもないよ。 <>
デフォルトの名無しさん<>sage<>2010/11/17(水) 17:29:51 <> <a href="../test/read.cgi/tech/1288342460/127" target="_blank">&gt;&gt;127</a> <br> 書ける。 <>
デフォルトの名無しさん<>sage<>2010/11/17(水) 17:43:06 <> ((lambda f: (lambda proc: f(lambda arg: (proc(proc))(arg)))(lambda proc: f(lambda arg: (proc(proc))(arg)))))(lambda f: lambda n: n * f(n - 1) if n else 1)(5) <br>  <br> ttp://www010.upp.so-net.ne.jp/okshirai/ycomb-j.html のヤツをやってみたけど <br> <a href="../test/read.cgi/tech/1288342460/111" target="_blank">&gt;&gt;111</a> のヤツより長くなってるし、括弧がすごいことに… <>
デフォルトの名無しさん<>sage<>2010/11/18(木) 01:49:59 <> <a href="../test/read.cgi/tech/1288342460/111" target="_blank">&gt;&gt;111</a>のやりかたで不十分で、Yコンビネータが必要になる場合って、どんなんがあるんだ？ <>
デフォルトの名無しさん<>sage<>2010/11/18(木) 04:50:33 <> <a href="../test/read.cgi/tech/1288342460/129" target="_blank">&gt;&gt;129</a> <br> 書けるのね。ありがとう。 <>
デフォルトの名無しさん<>sage<>2010/11/18(木) 16:18:21 <> 正規表現のコンパイルをする際に、その正規表現の対象となる文字列が改行に依存しない場合（一行だけの場合など）  <br> 必要の有無に関わらず"(?s)hoge"の形で(?s)フラグを指定してやると、  <br> 少なくともCPythonではコンパイル速度に明らかな向上が見られるのですが、  <br> ("hoge"よりも"(?s)hoge"が早い)  <br>  <br> 1. これはデフォルトの場合.を[^\n]な扱いにするとかの追加の処理が働いているからなのでしょうか  <br> 2. 他の処理系でも同様の挙動なのでしょうか（細かい挙動は未定義？）  <br> 3. こういったことを調べるのに良い手段があれば教えて頂けないでしょうか  <>
デフォルトの名無しさん<>sage<>2010/11/18(木) 17:05:44 <> ソース嫁 <>
デフォルトの名無しさん<>sage<>2010/11/19(金) 03:42:31 <> <a href="../test/read.cgi/tech/1288342460/134" target="_blank">&gt;&gt;134</a> <br> あなたに聞いてませんよ、ロリコン野郎。 <>
デフォルトの名無しさん<>sage<>2010/11/19(金) 10:09:05 <> 死ね <>
デフォルトの名無しさん<>sage<>2010/11/19(金) 12:09:10 <> 確かにロリ嫁ほしいねえ…… <>
デフォルトの名無しさん<>sage<>2010/11/19(金) 22:43:06 <> せめて常識として映画版ロリータくらい見てくれないかね <br> そんでロシア行って天国と地獄を見てくれ <>
デフォルトの名無しさん<>sage<>2010/11/19(金) 23:56:10 <> 下手の横好き <>
デフォルトの名無しさん<>sage<>2010/11/20(土) 00:36:11 <> 仰々しい <>
デフォルトの名無しさん<>sage<>2010/11/20(土) 17:44:28 <> ひとにものをたずねるときのマナーとしては <br> 自分の環境のバージョンくらい書くべきだよな <>
デフォルトの名無しさん<>sage<>2010/11/22(月) 23:11:39 <> hoge なんつう簡単なマッチだったら str の標準関数が速い。  <>
デフォルトの名無しさん<>sage<>2010/11/23(火) 00:00:23 <> pythonからWindowsのレジストリにアクセス(読み書き)するにはどんなモジュールを使えば良いですか？ <>
デフォルトの名無しさん<>sage<>2010/11/23(火) 01:06:37 <> <a href="../test/read.cgi/tech/1288342460/143" target="_blank">&gt;&gt;143</a> <br> つ _winreg <br> http://pythonjp.sourceforge.jp/dev/library/_winreg.html <>
デフォルトの名無しさん<>sage<>2010/11/26(金) 15:22:22 <> python 2.6でテキストに対するフィルタを製作したくて、手始めにUNIXコマンドのcat的なコマンドを作りたいのですが、 <br> 2行以上あるテキストを標準入力（パイプ）から受け取って標準出力に吐き出すためのおまじないなどありましたら <br> 教えて頂けると助かります。環境はLinuxです <>
145<>sage<>2010/11/26(金) 15:25:29 <> 連レスすみません、catのようにファイルから読み込んで標準出力に連結するのは実装できていて <br> 困っているのはgrepやsedのようにパイプからテキストを受け取って逐一標準出力に吐き出すやり方でした <>
デフォルトの名無しさん<>sage<>2010/11/26(金) 15:42:59 <> python cat.py ファイル <br> みたいにファイルをオープンして読み込むのはできていて <br> cat ファイル ｜ python grep.py <br> みたいに標準入力から読み込みたいということ？ <br>  <br> import sys <br> fp = sys.stdin  #open(〜)の代わり <br> でfpを読み込む <>
デフォルトの名無しさん<>sage<>2010/11/26(金) 16:06:38 <> import sys <br> for line in sys.stdin: ... <>
デフォルトの名無しさん<>sage<>2010/11/26(金) 17:41:57 <> http://docs.python.org/library/fileinput.html <>
デフォルトの名無しさん<>sage<>2010/11/26(金) 17:49:36 <> http://www.python.jp/doc/nightly/library/fileinput.html <>
146<>sage<>2010/11/27(土) 00:43:03 <> 遅くなってしまって申し訳ありません <br> 教えていただいた内容で無事次に進めそうです。ありがとうございました <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 01:48:44 <> 次は tail.py の実装だな <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 02:22:53 <> 効率よくきれいに書くにはどうすりゃいいんだろ？ <br> def tail(fp, n): <br> 　ls = [] <br> 　for lineno,line in enumerate(fp): <br> 　　ls.append(line) <br> 　　if lineno &gt; n: <br> 　　　del ls[0] <br> 　for line in ls: <br> 　　sys.stdout.write(line) <br> みたいに何度もappendとdel繰り返すのって効率悪そうだし。 <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 03:12:59 <> http://www.python.jp/doc/nightly/library/collections.html#deque <br>  <br> import&nbsp;sys <br> from&nbsp;collections&nbsp;import&nbsp;deque <br> def&nbsp;tail(fp,&nbsp;n): <br> &nbsp;&nbsp;&nbsp;&nbsp;sys.writelines(deque(fp,&nbsp;n)) <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 08:25:02 <> それじゃ tail -f が出来ないだろ <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 12:02:32 <> ttp://codepad.org/nyzf67zT <br> 書いてみたけど、結構面倒くせえなｗ <br>  <br> ところで <br> http://www.python.jp/doc/2.5/lib/bltin-file-objects.html <br> seek()の邦訳間違ってるのに気づいたけど、新しいのは直ってるのかな？ <br> ＞stdio の fseek() と同様に、ファイルの現在位置を返します <br> と書いてあるけど、嘘だから <br> 「設定します」が正しくて、返値はNone <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 12:03:06 <> tail -f は finally で <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 12:23:53 <> Ruby使う方が楽ですねぇ <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 12:45:14 <> のび太よかったわね <br> お友達がいっぱい出来て <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 12:50:00 <> <a href="../test/read.cgi/tech/1288342460/156" target="_blank">&gt;&gt;156</a> <br> tell(  ) <br> &nbsp;&nbsp;&nbsp;&nbsp;stdio の ftell() と同様、ファイルの現在位置を返します。  <br>  <br> ここをコピペしてそのまま直し忘れた感じっぽい <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 13:22:51 <> 修正しておいた。 <br> 明日には python.jp の nightly が直る。 <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 14:02:03 <> ユーティリティのコマンドの再発明ってgolf用の教材だと思ってた <>
デフォルトの名無しさん<>sage<>2010/11/27(土) 14:04:17 <> 英語版の方は問題ないな <br> 当然か <>
デフォルトの名無しさん<><>2010/11/27(土) 19:02:45 <> http://speed.pypy.org/comparison/?exe=2%2B35,4%2B35,1%2B172&ben=1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20&env=1&hor=false&bas=2%2B35&chart=normal+bars <br> pypy速いな。 <>
デフォルトの名無しさん<>sage<>2010/11/28(日) 02:44:19 <> UWSCは別に覚えないと駄目か… <>
デフォルトの名無しさん<>sage<>2010/11/29(月) 01:44:37 <> 時代はRubyだな <>
デフォルトの名無しさん<>sage<>2010/11/29(月) 01:47:21 <> いつの時代だよｗ <>
デフォルトの名無しさん<>sage<>2010/11/29(月) 23:26:37 <> Rubyはもう厳しいなｗ <br> PythonはすでにPerlの代わりに普通に使うようになってきた。 <>
デフォルトの名無しさん<>sage<>2010/11/30(火) 00:20:53 <> Ruby使わない非国民は日本からでてけよ <>
デフォルトの名無しさん<>sage<>2010/11/30(火) 00:49:50 <> Pythonは衰退の一歩だよ。 <>
デフォルトの名無しさん<>sage<>2010/11/30(火) 00:55:07 <> ruby厨は必至だなあ。日本日本って言うけど、スレタイの日本語も読めないのかよ <>
デフォルトの名無しさん<>sage<>2010/11/30(火) 00:55:15 <> <a href="../test/read.cgi/tech/1288342460/168-170" target="_blank">&gt;&gt;168-170</a> いいかげんにしろ <>
デフォルトの名無しさん<>sage<>2010/11/30(火) 08:28:32 <> Ruby使いは気持ち悪いから海外にいけよ <>
デフォルトの名無しさん<>sage<>2010/11/30(火) 14:45:19 <> バトロワスレあらすのヤメロ <>
デフォルトの名無しさん<><>2010/12/04(土) 17:53:41 <> 3.x系への移行にはあと何年かかるんだ？ <>
デフォルトの名無しさん<>sage<>2010/12/04(土) 18:07:02 <> 利用者にはメリット何も無い言語マニアの自己満足には付いていけない＞３ <>
デフォルトの名無しさん<>sage<>2010/12/04(土) 18:15:31 <> Linuxに関して言えばArchやFrugalware、gentoo (unstable)は3.xっぽいね <br> 他のdistroはどうなんだろ <>
デフォルトの名無しさん<><>2010/12/04(土) 19:56:03 <> 3でないと出来ないことが増えてくるまでは使う気にならないね <>
デフォルトの名無しさん<>sage<>2010/12/04(土) 20:45:53 <> 3kなんて元より趣味で作られたんだから、趣味で遊んでりゃ良いじゃないか <>
デフォルトの名無しさん<>sage<>2010/12/04(土) 22:01:13 <> 3.3 になったら本気出す <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 07:46:48 <> わしのpythonは3000まであるぞ <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 10:00:18 <> スライスの三番目の値ってなんでしょうか？ <br> やったら↓のような結果になるんですが、よくわからんとです <br> &gt;&gt;&gt; 'abcdefg'[2:4:6] <br> 'c' <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 10:05:25 <> &gt;&gt;&gt; "abcdefgh"[1:8:2] <br> 'bdfh' <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 10:09:09 <> <a href="../test/read.cgi/tech/1288342460/182" target="_blank">&gt;&gt;182</a> <br> あーステップか そんなこともできたのか <br> サンクス <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 10:09:57 <> <a href="../test/read.cgi/tech/1288342460/183" target="_blank">&gt;&gt;183</a> <br> 間違った <br> <a href="../test/read.cgi/tech/1288342460/184" target="_blank">&gt;&gt;184</a> <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 19:03:01 <> でもいつかは2.x系がメンテナンスされなくなる時期が来るでしょ。 <br> そうなると、いつかは3.x系に移行せざるを得ない。 <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 19:21:22 <> 10年くらい先だろうね <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 20:20:26 <> 10年くらい意外とあっさり過ぎるからな <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 20:59:07 <> で、そのころには5.xはまだ早いとか言ってるんだろ <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 22:41:39 <> 3kが出てそろそろ10年経つように思ってたがそうでもないのか？ <br> この調子のノンビリなアップデートなら10年後に3kスタンダードも夢じゃない <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 22:45:50 <> Djangoが3k対応したら一気に片付くんじゃね？ <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 22:59:45 <> IPythonが対応したら本気出す <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 23:03:11 <> PyPyのPython動かすPythonって元のPythonはなんで書かれてるの？ <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 23:04:37 <> ちなみに十年前はどの辺りがメジャーだったんですかね <>
デフォルトの名無しさん<>sage<>2010/12/05(日) 23:49:18 <> <a href="../test/read.cgi/tech/1288342460/193" target="_blank">&gt;&gt;193</a> <br> You know Python which is CPython <br> afaIk PyPy is on CPython <br> I dunno what's in it, but know what you must: Read it! <>
デフォルトの名無しさん<>sage<>2010/12/06(月) 01:45:30 <> <a href="../test/read.cgi/tech/1288342460/186" target="_blank">&gt;&gt;186</a> <br> 今だにサポートが切れたphp4が動いているご時世らしいからな・・・ <>
デフォルトの名無しさん<>sage<>2010/12/06(月) 03:59:41 <> phpもそうだが、バージョンアップしたほうがリスクがある(互換性がない実質別言語)んじゃしょうがないだろう・・。 <>
デフォルトの名無しさん<>sage<>2010/12/06(月) 09:04:52 <> Perl6... <>
デフォルトの名無しさん<>sage<>2010/12/06(月) 18:42:57 <> FreeBSDのportsで入れるpythonはmake configでスタックレスにできるのかな？ <br> それっぽいオプションはあるけど <>
デフォルトの名無しさん<>sage<>2010/12/08(水) 22:05:32 <> <a href="../test/read.cgi/tech/1288342460/197" target="_blank">&gt;&gt;197</a> <br> phpは後出しのくせにバージョン上げすぎだ <br> しかもその度に互換性を無視してアレを使うリスク高すぎ <>
デフォルトの名無しさん<>sage<>2010/12/08(水) 23:05:12 <> スレチだけどその問題が結構大きくうちの会社はPHPを捨てたよ <>
デフォルトの名無しさん<>sage<>2010/12/10(金) 21:54:57 <> 失礼します <br> 最近、プログラミングに興味もってpythonを始めてみましたが <br> プログラミング経験がまったくない自分にとってチュートリアルは敷居が高すぎて挫折しそう <br> だったんですが、 <br>  <br> ttp://vipprog.net/wiki/prog_lang/python.html#l6f818a7 <br>  <br> このサイトで、出てくる用語一つ一つを丁寧に解説して頂いたお陰でかなり理解できました。 <br> このスレに編集してくれた方がいましたら是非続きもお願いします。 <br>  <br>  <>
デフォルトの名無しさん<>sage<>2010/12/10(金) 22:17:33 <> 催促ﾜﾛﾀ <>
デフォルトの名無しさん<>sage<>2010/12/10(金) 22:43:11 <> 催促してすいません。 <br> しかもお礼のひとつも言わずに… <br> 赤の他人の為にあんな丁寧に解説してくれてありがとうございます。 <br> 気を長く、首を長くして待ってますので是非宜しくお願いします。 <>
デフォルトの名無しさん<>sage<>2010/12/10(金) 22:47:01 <> だがしかしあれを書いたのはRubyistの予感 <>
デフォルトの名無しさん<>sage<>2010/12/10(金) 22:57:54 <> <a href="../test/read.cgi/tech/1288342460/202" target="_blank">&gt;&gt;202</a> <br> Pythonで学ぶプログラム作法 <>
デフォルトの名無しさん<>sage<>2010/12/11(土) 00:22:28 <> <a href="../test/read.cgi/tech/1288342460/205" target="_blank">&gt;&gt;205</a> <br> こういうのは別に何言語使いでもよくないかな <>
デフォルトの名無しさん<>sage<>2010/12/11(土) 01:34:48 <> これ理解したら十分じゃね？ <>
デフォルトの名無しさん<>sage<>2010/12/11(土) 05:28:23 <> 俺も読んだからもう何でも作れるぜ <>
デフォルトの名無しさん<>sage<>2010/12/11(土) 05:41:08 <> Pythonで彼女は作れますか？ <>
デフォルトの名無しさん<>sage<>2010/12/11(土) 07:02:44 <> 作れるんじゃね <br> 実際ただのプログラムであるゲームキャラを彼女にするやつっているらしいじゃん <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 01:44:01 <> <a href="../test/read.cgi/tech/1288342460/204" target="_blank">&gt;&gt;204</a> <br> あれ読んだなら(もちろん実際に試したよな？)、プログラムの編集の仕方と動かし方はわかっただろうし、 <br> 何かつくってみればいいと思うよ。 <br>  <br>  <br> 途中でつまづいたり、わからないことがあったら、調べる。 <br> 知っている人に聞く。ここでもいいし、初心者スレでもいいし、vipのプログラムスレ、、、は知らん。 <br> ネット(Twitter、IRC、forum、メーリングリスト)やオフ(勉強会)で適当な師匠見つけて教えをこうてみる。 <br>  <br>  <br> 最近こんな人もいたし、むしろやりたいことがあるならけっこうなんとでもなる <br> 自分でWEBサービスを作りたいと思っている人へ <br> http://anond.hatelabo.jp/20101203150748 <br>  <br>  <br>  <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 02:43:54 <> 駕篭屋の宣伝うぜー <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 03:09:40 <> ただでさえレン鯖板で鬱陶しいのに <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 03:17:27 <> まぁ、最近は常識のない奴が増えたからな  <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 09:27:54 <> Pythonで彼女は作れないんですね <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 09:54:49 <> 男同士で集まりケツ堀りあって喜ぶような狭い世界にいるのでは彼女なんて一生できるわけがない <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 09:58:29 <> 言語違うけど… <br> http://www.tommyjp.com/2010/08/blog-post_14.html <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 10:14:09 <> なんでvipのプログラミングスレがここで挙がってるんだ？ <br> ニュース系板の専用スレなんて専門板の底辺が集まった馴れ合い <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 11:42:36 <> VIPはニュース系じゃなくて雑談板だよ <br> プログラミングに関するwiki作ってるパートスレあるし <br> この板よりよっぽどマシだけどな <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 11:46:52 <> vipでやれウジ虫 <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 11:49:52 <> ウジ虫以下が何かゆってる <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 11:54:11 <> 失せろカス <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 11:54:57 <> 優等なvipperをバカにすんなよ？ｗ <br> お前らなんて親指でこっぱみじんだからなｗｗｗｗｗｗｗｗ <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 11:56:02 <>  <br> ちょｗｗｗｗｗｗｗｗｗｗｗｗｗｗ  <br>  <br> 今ここにｗｗｗｗｗｗｗｗｗｗｗ最強のｗｗｗｗｗｗｗｗｗ俺ｗ様ｗ光ｗ臨ｗｗｗｗｗｗｗｗｗ  <br>  <br> 食らえｗｗｗｗｗｗｗｗｗ必殺ｗｗｗｗｗｗｗｗｗｗｗ  <br>  <br> グｗラｗンｗドｗクｗロｗスｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗｗ  <br>  <br> 　　　　　　う  <br> 　　　　　　は  <br> 　　　　　　ｗ  <br> 　　　　　　ｗ  <br> 　　　　　　ｗ  <br> お ｋｗ ｗ ｗ ｗ ｗ ｗ ｗ  <br> 　　　　　　ｗ  <br> 　　　　　　ｗ  <br> 　　　　　　ｗ  <br> 　　　　　　ｗ  <br> 　　　　　　ｗ  <br> 　　　　　　ｗ <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 11:57:52 <> つ 単一電池 <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 12:04:14 <> 次スレのタイトルはvipperが寄り付かないように <br> 人生の敗北者には縁の無いPythonのお勉強 Part41 でオナシャス <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 12:06:27 <> なにそのルーザー臭 <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 12:29:01 <> おい　貴様らみたいな不細工はk i e r o <br>  <br> ID takuya19715 <br>  <br> 本当にいらん　不細工で性格が悪いとなったらゴ　ミ　ゴ　ミ　ク　ズ <br>  <br> まぁイケメンｓと可愛い女の子は来てね <br>  <br> 不細工は来るな　まぁおまえらはクズな人生を生きればいい <br> 俺は、運がよかったからイケメンになったけど、おまえらは運が悪いから不細工になったんだよ　親を憎むなよ　あばよ <>
デフォルトの名無しさん<>sage<>2010/12/12(日) 20:01:04 <> <a href="../test/read.cgi/tech/1288342460/218" target="_blank">&gt;&gt;218</a> <br> すげー読みにくい最低の日本語 <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 12:43:16 <> 2010年うやむやなまま終わりそうなこと <br>  <br> 1:月刊python <br> 2:pycon jp <br> 3:お前らの今年中に彼女作る宣言 <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 12:50:16 <> 月刊Pythonなんてやろうとしてたのか <br> Rubyでさえるびまが息も絶え絶えなのに <br>  <br> そういえば日替わり標準ライブラリ解説の人の本が出るね <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 12:56:54 <> 日本ってなんでど素人が本出してるの？ <br> 出版社も愚かだねえ <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 15:17:36 <> 「俺の方がアイツより」って思っちゃう人はたいてい人間性に問題があるので、なにをやっても大成しない <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 16:07:25 <> <a href="../test/read.cgi/tech/1288342460/234" target="_blank">&gt;&gt;234</a> <br> &gt; 俺のほうがアイツより <br> それってハングリー精神っていうんだよね。 <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 16:48:54 <> 匿名掲示板でハングリー精神か <br> おめでてえな(wwWwWWWwwwWwWwwwww <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 17:15:38 <> Pythonで夕食も作れたらハングリーが解消できるのに・・・ <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 17:34:06 <> pizzaの宅配ぐらいならできるかもね <br> お金が無い？知らんがな <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 17:47:51 <> ハンガリー精神？ <br> ハンガリアン記法を使う宗派かなにか？ <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 17:50:37 <> で、お前ら何作ってるの？ <br> 毎年毎年スレ汚してばっかりだね <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 17:52:46 <> ワンクリック入信サイト <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 17:59:07 <> 勉強会に出るのが仕事です <>
デフォルトの名無しさん<>sage<>2010/12/13(月) 18:05:07 <> 普通にwebアプリだろ <>
デフォルトの名無しさん<>sage<>2010/12/14(火) 01:01:32 <> <a href="../test/read.cgi/tech/1288342460/240" target="_blank">&gt;&gt;240</a> <br> コマンドライン上で動くソリティアとか作ってる。 <br> 但しサブコマンドの解説は一切ないので、俺しか遊び方が分からない。 <>
デフォルトの名無しさん<>sage<>2010/12/14(火) 01:24:11 <> numpy+scipy+f2py+matplotlib 使って 仕事で使うデータ解析プログラムを書いている <>
デフォルトの名無しさん<>sage<>2010/12/14(火) 02:27:41 <> <a href="../test/read.cgi/tech/1288342460/235" target="_blank">&gt;&gt;235</a> <br> あんなのよりモバゲーの方がいいに決まってる→反グリー精神 <>
デフォルトの名無しさん<>sage<>2010/12/14(火) 22:40:03 <> <a href="../test/read.cgi/tech/1288342460/214" target="_blank">&gt;&gt;214</a> <br> うわっ、それは知らんかった。 <br>  <br> VPS業者のリンク貼ってあったからか。 <br> むこうの匿名ダイアリーでもOpenVZでクソVPSって指摘しても、わかる奴にはわかると言われてたし <br> 気にせず貼ったのがうかつか。 <br>  <br> いや、レン鯖板で張られまくってるのを見てる人がいるから余計か。 <>
デフォルトの名無しさん<>age<>2010/12/15(水) 06:40:33 <> <a href="../test/read.cgi/tech/1288342460/231" target="_blank">&gt;&gt;231</a> <br> &gt;2010年うやむやなまま終わりそうなこと <br> &gt; <br> &gt;1:月刊python <br> &gt;2:pycon jp <br> &gt;3:お前らの今年中に彼女作る宣言 <br>  <br> 4 ダンジョー翻訳スプリント <>
デフォルトの名無しさん<>age<>2010/12/15(水) 06:47:27 <> <a href="../test/read.cgi/tech/1288342460/231" target="_blank">&gt;&gt;231</a> <br> &gt;2010年うやむやなまま終わりそうなこと <br> &gt; <br> &gt;1:月刊python <br> &gt;2:pycon jp <br> &gt;3:お前らの今年中に彼女作る宣言 <br>  <br> 4 ダンジョー翻訳スプリント <>
デフォルトの名無しさん<>sage<>2010/12/15(水) 06:54:55 <> 大事なことなので <>
デフォルトの名無しさん<>sage<>2010/12/15(水) 10:44:40 <> 過疎ってるなと思ったらＶＩＰにのっとられてたか <br> はやいとこスタックレスpythonをデフォルトで使えるようにしてほしい <>
デフォルトの名無しさん<>sage<>2010/12/16(木) 23:25:08 <> 正規表現って難しいね <>
デフォルトの名無しさん<>sage<>2010/12/16(木) 23:30:18 <> 正規社員になるのって難しいね <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 12:44:28 <> Pythonicドザーはエディタ何使ってるの？ <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 14:59:56 <> [Python Recommended Editor by Editors] <br> x Python + Emacs <br> v Python + Eclipse (PyDev) <br> v Python + PyScripter (Windows) <br> o Python + IDLE (Default) <br> @ Python + Editra <br>  <br> Emacs is dropped by badly python-mode. <br> Eclipse is neutralized by IDE which is good for large-scale project. <br> PyScripter is neutralized by IDE which is Windows only. <br> IDLE is gained by editor as default and nice. <br> Editra is granted by editor for Python coded by Python. <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 16:19:46 <> Pythonエバンジェリストの俺様はVimだよ <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 16:35:53 <> 当然秀丸 <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 16:36:30 <> ed <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 16:47:47 <> メモ帳 <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 16:52:04 <> 当然禿丸 <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 16:57:32 <> gedit <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 17:06:50 <> Python使えるエディタってまともなのがないね <br> さくらエディタ、秀丸は和ゴミ芸当 <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 17:21:02 <> PythonWin <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 17:21:35 <> notepad++ <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 17:30:58 <> &gt; Python使えるエディタってまともなのがないね <br> まともじゃないのはお前の能力だなｗ <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 18:19:28 <> you too の意味 <br>  <br> Thank you. &lt;ありがとう&gt; <br> I'm glad to see you. &lt;私はあなたに会えて嬉しい&gt; <br> I know you are crazy about skill xD &lt;まともじゃないのはお前の能力だなｗ&gt; <br> 全てにyou tooで答えられます。 <br> (Thank) you too. &lt;こちらこそありがとう&gt; <br> (I'm glad to see) you too. &lt;私も〜&gt; <br> (I know) you (are crazy about skill xD) too. &lt;お前こそまともじゃない能力だなｗ&gt; <br>  <br> ×これは間違っています！ <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 19:03:55 <> 強調表示と、選択範囲のインデント／アンインデント機能があれば何でもいいよ <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 22:41:25 <> 最近だと <br> me too <br> が流行りらしいが <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 22:49:36 <> Editraってか、wxのScintilla系のコンポーネントは <br> 日本語のインライン入力できないとかいう話を聞いたような <br> Scintilla自体は問題ないのにな <br>  <br> 日本だと、IME+インライン入力対応は当然として <br> 文字エンコーディングの自動判別や変換機能も無いと使い物にならないので <br> それだけでもテキストエディタはある程度限定される気がする <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 23:05:03 <> 調教の完了したnotepad++最強 <>
デフォルトの名無しさん<>sage<>2010/12/17(金) 23:05:31 <> <a href="../test/read.cgi/tech/1288342460/270" target="_blank">&gt;&gt;270</a> <br> エロいな <>
デフォルトの名無しさん<>sage<>2010/12/18(土) 09:56:34 <> 結論：PyDev <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 00:46:43 <> 俺もPyDevだな。遅いPCだと死ねるし、速いのでもちょっと見たいときはvimだけど。 <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 02:46:42 <> PyDevとか使うって何処の素人よ <br> やべーよそれ <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 10:45:49 <> インテリセンンスないと遠くにあるメソッドとかメンバとかどうやってタイプするの <br> いちいちそこに戻って確認するの <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 13:10:09 <> PyDevもコード補完くらいある <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 13:10:58 <> PyDevを使わないってやつに聞いてるんだよ <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 13:28:39 <> notepad++も補完くらいはしてくれそう <br> 俺の場合補完はあまり効かないけど <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 15:26:39 <> 端末上でちょこっと弄りたいて場合は何がいいの？emacs？ <br> vim使ってるけど補完とか欲しい <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 15:57:33 <> vimでも補完ぐらいできるよ <br> もっともvimの場合、pythonのdllにリンクするようにvimがビルドされている必要が <br> あるし、vimをビルドする時点でリンクされるdllの名前（つまりPythonのバージョン） <br> が決まってしまうけど <br>  <br> もしPythonが有効になっているなら <br> : py print 'hello, world' <br> とか <br> : py import vim <br> : py print dir(vim) <br> とかやってみるといい <br>  <br> 補完については、オムニ補完でぐぐるといいよ <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 16:56:14 <> <a href="../test/read.cgi/tech/1288342460/275" target="_blank">&gt;&gt;275</a> <br> どうやってタイプするのって・・・タイプは手でするもんだ <br> 100年前から決まっている <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 16:58:19 <> Guidoさんは指にとんがりコーンをはめてタイプします <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 18:01:33 <> <a href="../test/read.cgi/tech/1288342460/275" target="_blank">&gt;&gt;275</a> <br> ちゃんと関数管理台帳があるから心配するな。 <br>  <br> 一応言っておくが関数作成するときは申請出せよ？ <br> 採番から漏れるからな。 <>
デフォルトの名無しさん<>sage<>2010/12/19(日) 18:32:40 <> 冬なのに怖い話とかやめろよ… <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 00:45:36 <> pythonで補完はいらんなあ <br> Eclipseなら大規模はJavaとC++でするし <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 00:51:53 <> そんなちょちょいと結果が欲しい時ならまだしも <br> pythonの膨大なライブラリの時点で、補完はいるだろ <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 01:28:20 <> <a href="../test/read.cgi/tech/1288342460/286" target="_blank">&gt;&gt;286</a> <br> 無能な奴はそう考えるのか・・・滑稽だな <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 01:30:09 <>  <br>  <br> 　　「無能な奴はそう考えるのか・・・滑稽だな」 <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 01:31:10 <> &gt;大規模はJavaとC++でするし <br>  <br>  <br> 無能な奴はそう考えるのか・・・滑稽だな <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 01:37:04 <> C++ (インフラ), Java(フロント・エンド)、Python(社内システム)が三大 言語。その他、Go、JavaScript、ActionScript も <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 01:37:41 <> <a href="../test/read.cgi/tech/1288342460/290" target="_blank">&gt;&gt;290</a> <br> 無能な奴はそう考えるのか・・・滑稽だな <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 01:40:22 <> &gt; 天下のGoogleの使用言語 <br>  <br>  <br> 無能な奴はそう考えるのか・・・滑稽だな <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 01:44:19 <> 無能な奴はそう考えるのか・・・滑稽だな <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 03:26:30 <> Pythonの補完はIPythonでやるな。 <br> IPythonで名前の補完だけじゃなくて動作の確認までできたコードをテストも含めて <br> コピペして、それをリファクタリングして正式なコードにする。 <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 04:06:38 <> ＞Pythonの <br>  <br> 無能な奴はそう考えるのか・・・滑稽だな <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 08:37:29 <> IDLEが一番勉強になる <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 10:37:19 <> <a href="../test/read.cgi/tech/1288342460/296" target="_blank">&gt;&gt;296</a> <br> 無能な奴はそう考えるのか・・・滑稽だな <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 12:11:04 <> <a href="../test/read.cgi/tech/1288342460/294" target="_blank">&gt;&gt;294</a> <br> IPythonだと複数行とか、後でコピペしようと思ったら <br> In[1]とか...とかが邪魔なんだけど、どうしてる？ <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 15:03:24 <> ヒストリで呼び出すと ... はないけど… <br>  <br> tty 内のエディタで張り付けると <br> エディタの児童インデントとの組合わせで <br> ちと悲しい結果になっちゃうけど <br>  <br> (emacs では *scratch* とかの「他のバッファ」に <br> いったん貼ってから copy&yank してます) <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 15:17:04 <> <a href="../test/read.cgi/tech/1288342460/298" target="_blank">&gt;&gt;298</a> <br> Vimの矩形編集使ってる。 <br>  <br> 矩形編集できないエディタの人は、 %logstart ってコマンドを使うといいと思う。 <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 15:19:09 <> それらを削除するのもスクリプトでやればいいじゃない <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 16:33:53 <> 前は eric4 とか薦めてるひといたけどもう居ないのかな <>
デフォルトの名無しさん<>age<>2010/12/20(月) 18:30:50 <> <a href="../test/read.cgi/tech/1288342460/299" target="_blank">&gt;&gt;299</a> <br> &gt;児童インデント <br>  <br> 捕まらないように気をつけろよ。 <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 20:44:16 <> 今このスレみてeditraの存在知って入れてみたけどかっこいいな <br> けどpyshellからsite-packagesに入ってるライブラリ使えねえ... <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 22:37:46 <> editraの何がいいの？ <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 22:40:16 <> スクリプトエディタとしてはIDLEの強化版といえる <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 22:45:28 <> FPSならばれなかった <>
デフォルトの名無しさん<>sage<>2010/12/20(月) 22:48:27 <> <a href="../test/read.cgi/tech/1288342460/298" target="_blank">&gt;&gt;298</a> <br> $ ipython --classic <br>  <br> IPythonの3対応まだかなぁ… <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 00:07:20 <> <a href="../test/read.cgi/tech/1288342460/298" target="_blank">&gt;&gt;298</a> <br> print In[1:10] <br>  <br> とか。 <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 00:33:41 <> <a href="../test/read.cgi/tech/1288342460/309" target="_blank">&gt;&gt;309</a> <br> なるほど。そうするのか、ありがとう <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 10:50:21 <> Code Completed 第二版 <br> なんで英語だと2500円の本が日本語に翻訳されただけで13000円なの？馬鹿なの？しぬの？ <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 13:16:56 <> <a href="../test/read.cgi/tech/1288342460/311" target="_blank">&gt;&gt;311</a> <br> じゃあ英語版かえばいいじゃない。 <br> そんなこともわからないとは馬鹿なの？しぬの？ <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 15:59:25 <> いやでも確かに酷いな。 <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 16:01:18 <> <a href="../test/read.cgi/tech/1288342460/311" target="_blank">&gt;&gt;311</a> <br> それパチモンだしそこまで安くない <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 16:10:31 <> http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670 <br> これ？ <br> Code Complete"d"なら違う本か？ <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 16:28:42 <> 渤多栗 <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 16:33:52 <> 英語読めないやつは大成しない。 <br> これマメな <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 17:43:55 <> All your base are belong to us. <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 19:28:55 <> <a href="../test/read.cgi/tech/1288342460/315" target="_blank">&gt;&gt;315</a> <br> それそれ <br> 英語できないプログラマ向けにぼったくってる <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 19:35:12 <> 英語読めないってこれも読めないの？ <br> Formats Amazon Price  New from  Used from <br> Hardcover　　　　--　　　　--　　　$257.09 <br> Paperback　　$31.10　　$31.10　　$21.96 <br> usedでもこれだけ差があるんだよ？ <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 20:02:54 <> これはひどい <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 20:18:15 <> 日本語版はハードカバーじゃないのにお値段がハードカバー並みだと <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 20:59:29 <> 送料込みで日尼で買うのとたいして変わらんがな <br> で、どこから2500円が出てきたんだ <>
デフォルトの名無しさん<>sage<>2010/12/21(火) 21:17:16 <> http://www.google.co.jp/search?sourceid=chrome&ie=UTF-8&q=$31.10+to+yen <>
デフォルトの名無しさん<>age<>2010/12/23(木) 06:49:29 <> PYTHONの勉強会はなんでガラガラスキスキなの？ <>
デフォルトの名無しさん<>sage<>2010/12/23(木) 07:03:15 <> 富士山樹海で今度勉強会やるから来いよ <br>  <>
デフォルトの名無しさん<>sage<>2010/12/23(木) 09:20:05 <> もうすぐクリスマスだな。 <br> お前らが今年いかに無為に過ごしたかが証明される日だぞ。 <>
デフォルトの名無しさん<>sage<>2010/12/23(木) 10:08:50 <> 彼女うんぬんで1年を評価される筋合いはない <>
デフォルトの名無しさん<>sage<>2010/12/23(木) 11:07:35 <> ヘビ使いなら、クリスマスこそ新しい言語を作る季節 <>
デフォルトの名無しさん<>sage<>2010/12/23(木) 11:19:27 <> raise StopChristmas <>
デフォルトの名無しさん<>sage<>2010/12/23(木) 12:35:32 <> 俺彼女いるし、今年のクリスマスは一緒にディナー食べるけど。 <br> 彼女がいるとかいないとかで一年を評価されるとは思わない。 <br> 328は正しいと思う。いいこと言った。 <br> けど、こんな受け答えをしてしまう328には一生彼女できないと思う。 <>
デフォルトの名無しさん<>sage<>2010/12/23(木) 13:36:11 <> pythonで彼女が出来ました <>
デフォルトの名無しさん<>sage<>2010/12/23(木) 14:04:32 <> &gt;pythonで彼女が出来ました <br> 無(略)な <>
デフォルトの名無しさん<>sage<>2010/12/24(金) 05:48:44 <> pythonのお勉強を始めようと思います <>
デフォルトの名無しさん<>sage<>2010/12/24(金) 09:30:51 <> Pythonで彼氏が出来ました！ <>
デフォルトの名無しさん<>sage<>2010/12/26(日) 05:19:10 <> Pythonでクリスマスを回避できました <br> 本当にありがとうございました <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 00:30:07 <> PythonでシンプルにHTTPレスポンスヘッダを出力するスクリプト書いてうｐしたんだけど <br> たった数行なのに丸1日かかった自分のヘタレさにorzした <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 00:46:06 <> 後から見直して死にたくなることはよくあること <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 03:58:54 <> 次から速くなれば医院で内科医 <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 12:36:00 <> 自分が書いた100行が他所では数行で済まされてたりするとかね <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 13:32:46 <> <a href="../test/read.cgi/tech/1288342460/340" target="_blank">&gt;&gt;340</a> <br> そこまで差が出るときは「そんなライブラリ知るか！」ってのが多い。 <br> 10行が数行だと、すごくやられた感が。 <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 14:29:35 <> まあでも「そんなライブラリあったのか」(参考になる+1)とも言えるけどな <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 18:10:39 <> <a href="../test/read.cgi/tech/1288342460/336" target="_blank">&gt;&gt;336</a> <br> ネタだろうけど、オレはリアルでクリスマス返上でpythonのお勉強してた。 <br> 久しぶりに充実した時間だったよｗ <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 18:40:00 <> クリスマスではしゃぐのって10代までじゃない <br> もしかしてIT土方に参加券がないだけか？ <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 20:55:11 <> <a href="../test/read.cgi/tech/1288342460/344" target="_blank">&gt;&gt;344</a> <br> IT土方だがクリスマスは満喫したよ。 <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 22:25:17 <> 寧々さんとケーキ食べたよ。 <br> クリスマスっていいね。 <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 23:42:18 <> 最近発見して驚愕したのはタートルグラフィックスのライブラリがついてたこと <>
デフォルトの名無しさん<>sage<>2010/12/27(月) 23:44:17 <> つまりこれか <br> http://showmedo.com/videotutorials/video?name=pythonJensFromKids1&fromSeriesID=57 <>
デフォルトの名無しさん<>sage<>2010/12/28(火) 00:20:16 <> NokiaのPySideのソースコードを眺めてびっくりした。 <br> C/C++のソースコードがなくてxmlだらけ。 <br> どうやらここからGeneratorRunner/Shibokenというツールを使って <br> CPython向けのC++コードを自動生成しているらしい。 <>
デフォルトの名無しさん<>sage<>2010/12/28(火) 12:58:53 <> <a href="../test/read.cgi/tech/1288342460/349" target="_blank">&gt;&gt;349</a> <br> 初心者でよくわからないけど、pyside-mobility-0.2.0.tar.bz2ってやつ？ <>
デフォルトの名無しさん<>sage<>2010/12/28(火) 19:27:03 <> <a href="../test/read.cgi/tech/1288342460/346" target="_blank">&gt;&gt;346</a> <br> しんちゃん乙 <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 00:35:42 <> <a href="../test/read.cgi/tech/1288342460/350" target="_blank">&gt;&gt;350</a> <br> ええっと、pyside-qt4.7+1.0.0~beta2.tar.bz2 の方です。 <br> C/C++で書かれたライブラリのPythonバインダーは <br> 元のライブラリをPythonで扱えるようにするためのラッパーの*.pydが主体になるんですが、 <br> Qtのような巨大なライブラリの場合、こういった特殊な実装法になるようです。 <br>  <br> Pythonの場合GUIツールキットは他にもあるので箸が迷いますが、 <br> とりあえずこれでアプリを作ってみる予定。 <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 09:28:42 <> PythonでGUIアプリ作りたいんだけど、 <br> 今だとやっぱQtなのー？ <br> wxPythonとどっちが良いのか迷ってるんだ <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 11:00:36 <> 俄然wxPython也 <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 11:52:40 <> IronPython <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 12:30:33 <> <a href="../test/read.cgi/tech/1288342460/354" target="_blank">&gt;&gt;354</a> <br> why? <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 13:30:57 <> Qtだと環境が限定されちゃうからじゃね <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 14:44:24 <> <a href="../test/read.cgi/tech/1288342460/357" target="_blank">&gt;&gt;357</a> <br> Qt使えなくてwxPythonなら使える環境って具体的にどんなの？ <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 15:22:26 <> え〜と…Windows？ <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 15:31:38 <> PyQtあるじゃん <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 16:52:02 <> <a href="../test/read.cgi/tech/1288342460/359" target="_blank">&gt;&gt;359</a> <br> え？ <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 17:57:52 <> 好きなのを使え <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 18:30:14 <> Pypi <>
デフォルトの名無しさん<>sage<>2010/12/29(水) 20:59:59 <> wxPythonはオブジェクト指向でPythonとの親和性がいい <br> Qtは慣れればいいけどすぐに汚いコードになる <br> それとwxPythonで作られたGUIアプリが多いので参考になる -&gt; Editra <>
デフォルトの名無しさん<>sage<>2010/12/30(木) 00:42:05 <> 横からだがなるほど参考になったですはい <>
デフォルトの名無しさん<>sage<>2010/12/30(木) 01:19:29 <> <a href="../test/read.cgi/tech/1288342460/353" target="_blank">&gt;&gt;353</a> <br> pyside <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 00:08:34 <> QtはKDEの存在があるだけに開発が早く先進的。4.5でLGPLにもなった。 <br> ただし、Qtは4系とそれまでの3以前とで互換性が無い。蓄えられた情報を生かせない。 <br> Qt4はGUI開発で経験があって一人でてきぱき進んでいける人、人柱になれる人向けと理解してる。 <br> 今から古いQtならwxなり当たった方が <>
デフォルトの名無しさん<><>2010/12/31(金) 01:12:19 <> クリスマス来てたんだ <br> 納期が〜 <br> 趣味のpython触りたい <br> 自然言語処理とか統計とかしたい <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 01:41:46 <> 入門自然言語処理オススメ <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 01:48:01 <> それのことを言ってんだろ <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 02:06:59 <> 統計だったら集合知プログラミングとかじゃないのか。まぁ別にどっちでも構わんが。 <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 02:12:51 <> だから、その二つのことを言ってんだろ <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 02:14:32 <> 　　 ┌─┐ <br> 　　 │●│ <br> 　　 └─┤ <br> 　　　_ 　 ∩ <br> 　　( ﾟ∀ﾟ)彡 <br> ┌─┬⊂彡 <br> │●│　おっぱい！おっぱい！ <br> └─┘ <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 02:19:39 <> ＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿ <br> |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 ノ´⌒ヽ,,　　　　　　　　　　 | <br> |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 γ⌒´　　　 　 ヽ,　　　　　　 　 　 | <br> |　以下　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　／／ ""⌒⌒＼　　）　　　　　　　 　 | <br> |　ミンシュトー創設者　　　　　　　　 　 　 　 　 　 　 　 　 　 ｉ /　　 ＼　 ／ ヽ　） 　 　 　 　 　 　 | <br> |　ルｩピー・ウェールズからの　　　　　　　　　　　　 　 　 　 !ﾞ　　 (･ ）｀ ´( ･） ｉ/　　　　　　　　　 | <br> |　メッセージをお読みください　　　　　　　　　　　　　　　　　|　　 　 （__人_）　 |　　　　　　　　　　| <br> |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 ＼　　　 ｀ー'　 ／.　　　　　 　 　 　 | <br> |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　ﾊ',::ヽ　　　　　　ﾊ､.　　　　　 　 　 　 | <br> |　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　,,､-'´　|＼`ヾ::::::::::::ィ　　/　|　｀`ヽ─-､.　 | <br> ￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 10:20:15 <> 友　愛 <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 11:51:27 <> <a href="../test/read.cgi/tech/1288342460/374-375" target="_blank">&gt;&gt;374-375</a> <br> おまえのようなクソ人間は今すぐ死ぬべき。 <br>  <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 12:23:21 <> <a href="../test/read.cgi/tech/1288342460/376" target="_blank">&gt;&gt;376</a> <br> そうカッカすんなってw <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 12:31:15 <> <a href="../test/read.cgi/tech/1288342460/376" target="_blank">&gt;&gt;376</a> <br> ルーピー乙 <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 12:51:28 <> <a href="../test/read.cgi/tech/1288342460/374-375" target="_blank">&gt;&gt;374-375</a> <br> おまえのようなクソ人間は今すぐ死ぬべき。 <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 14:15:53 <> ところでTab派って異端？ <br> スペース4つ入れるのめんどい… <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 14:17:42 <> エディタ設定で、タブキー押下でスペース４つ入るようにできるだろ。 <br> あと、保存時にタブからスペース変換機能もあるだろ。 <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 14:19:02 <> <a href="../test/read.cgi/tech/1288342460/380" target="_blank">&gt;&gt;380</a> <br> エディタをソフトタブに設定してタブ使えばいい <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 14:19:30 <> 異端というかご法度に近い非推奨じゃなかったっけ？ <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 14:23:38 <> そうか御法度か…ソフトタブね <br> やっぱり趣味とは言え、メモ帳はダメなのか <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 14:36:26 <> 仕事で強制されてメモ帳なら理解できる <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 15:42:11 <> いやプログラミングとか全くする必要がない仕事なんで <br> 仕事用のPCにあんまり色々入れるとマズいんだw <br> 自宅PCにはちゃんとしたエディタ入れてる <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 16:56:18 <> <a href="../test/read.cgi/tech/1288342460/380" target="_blank">&gt;&gt;380</a> <br> スペース２個派ですよろしく <>
デフォルトの名無しさん<><>2010/12/31(金) 16:59:01 <> <a href="../test/read.cgi/tech/1288342460/387" target="_blank">&gt;&gt;387</a> <br> ノ <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 20:29:02 <> <a href="../test/read.cgi/tech/1288342460/387-388" target="_blank">&gt;&gt;387-388</a> <br> おまえのようなクソ人間は今すぐ死ぬべき。 <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 20:42:45 <> 同じ文句の使い回しだとすぐ規制されますよ <>
デフォルトの名無しさん<><>2010/12/31(金) 22:51:42 <> import sys <br> from PySide.QtCore import * <br> from PySide.QtGui import * <br>  <br> class View: <br> 　def __init__(self): <br> 　　self.widget = QWidget() <br> 　　self.grid = QGridLayout(self.view) <br> 　　for c, name in enumerate(["alpha", "beta", "gamma"]): <br> 　　　button = QPushButton(name) <br> 　　　self.grid.addWidget(button, c, 0) <br> 　　　button.clicked.connect(lambda: self.buttonClicked(name)) <br> 　def buttonClicked(self, name): <br> 　　print name <br>  <br> if __name__ == '__main__': <br> 　app = QApplication(argv) <br> 　view = View() <br> 　view.widget.show() <br> 　app.exec_() <br> 　sys.exit() <br>  <>
デフォルトの名無しさん<><>2010/12/31(金) 22:52:38 <> 上のコードだけど、 <br> PySideで動的にスロットをconnectするときに、 <br> どのボタンを押しても gamma と出力される。なぜ？ <>
デフォルトの名無しさん<>sage<>2010/12/31(金) 22:58:48 <> <a href="../test/read.cgi/tech/1288342460/392" target="_blank">&gt;&gt;392</a> <br> c, name はクロージャ変数だから、 lambda: self.buttonClicked(name) の nameという変数は <br> lambda の内側と外側で同一のもので、ループのたびに書き換えられるから、最後の値になる。 <br>  <br> lambda name=name: self.buttonClicked(name) ってすると、lambdaの仮引数nameに <br> 外側のnameの「値」がデフォルト値として束縛されるので、期待した動作になるはず。 <>
 </b>【中吉】<b> <>sage<>2011/01/01(土) 00:17:22 <> あけおめ <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 00:22:15 <> <a href="../test/read.cgi/tech/1288342460/394" target="_blank">&gt;&gt;394</a> <br> PythonスレだしせっかくなんだけどPythonっぽくたのむわ <br> 俺？　スキル低すぎて思いつかん <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 00:23:50 <> Hap"python"ewyear! <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 00:26:05 <> <a href="../test/read.cgi/tech/1288342460/395" target="_blank">&gt;&gt;395</a> <br> 巳年まで待て <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 00:28:05 <> <a href="../test/read.cgi/tech/1288342460/397" target="_blank">&gt;&gt;397</a> <br> うんわかった <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 00:29:15 <> イテレーターの神様のレス貼ってくれ <>
 </b>【ぴょん吉】<b>  </b>株価【37】<b>  </b>【1141円】<b> <>sage<>2011/01/01(土) 00:34:13 <> ４００ <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 00:42:41 <> <a href="../test/read.cgi/tech/1288342460/393" target="_blank">&gt;&gt;393</a> <br> うーん。試してみたんだけど、 <br> 今度はbuttonClicked()にFalseが渡ってくるだけになるね。 <br> 挙動が謎だ……。 <>
!omikugi  </b>【1245円】<b> <>sage<>2011/01/01(土) 00:53:45 <> 御神籤しよっと <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 00:57:16 <> おみ釘になってっぞ <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 01:00:55 <> 釘をさすな <>
!omikuzi  </b>【1878円】<b> <>sage<>2011/01/01(土) 01:02:47 <> [i for i in range([あ,け,お,め])] <br> print i <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 01:04:46 <> print [i for i in range(['あ','け','お','め'])] <br>  <br>  <>
 </b>【だん吉】<b>   </b>【1821円】<b> <>sage<>2011/01/01(土) 01:07:43 <> 甘いな、Unicode文字列になってないから文字化けだな <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 01:22:24 <> つーかrangeもいらねーじゃんorz <>
 </b>【小吉】<b>   </b>【1470円】<b> <>sage<>2011/01/01(土) 01:36:22 <> 今年もよろしくお願いします <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 02:30:35 <> &gt;&gt;&gt; [c for c in 'あけおめ'] <br> ['\x82', '\xa0', '\x82', '\xaf', '\x82', '\xa8', '\x82', '\xdf'] <br> &gt;&gt;&gt; [c for c in u'あけおめ'] <br> [u'\u3042', u'\u3051', u'\u304a', u'\u3081'] <br> &gt;&gt;&gt; <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 02:56:44 <> &gt;&gt;&gt; [c.encode('cp932') for c in u'あけおめ'] <br> ['\x82\xa0', '\x82\xaf', '\x82\xa8', '\x82\xdf'] <br> &gt;&gt;&gt; print [c for c in u'あけおめ'] <br> [u'\u3042', u'\u3051', u'\u304a', u'\u3081'] <br> &gt;&gt;&gt; print repr([c for c in u'あけおめ']) <br> [u'\u3042', u'\u3051', u'\u304a', u'\u3081'] <br> &gt;&gt;&gt; print repr([c for c in u'あけおめ']).decode('unicode-escape') <br> [u'あ', u'け', u'お', u'め'] <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 03:00:25 <> &gt;&gt;&gt; [c.encode('cp932') for c in u'あけおめ'] <br> ['\x82\xa0', '\x82\xaf', '\x82\xa8', '\x82\xdf'] <br> &gt;&gt;&gt; print [c.encode('cp932') for c in u'あけおめ'] <br> ['\x82\xa0', '\x82\xaf', '\x82\xa8', '\x82\xdf'] <br> &gt;&gt;&gt; print repr([c.encode('cp932') for c in u'あけおめ']) <br> ['\x82\xa0', '\x82\xaf', '\x82\xa8', '\x82\xdf'] <br> &gt;&gt;&gt; print repr([c.encode('cp932') for c in u'あけおめ']).decode('string_escape') <br> ['あ', 'け', 'お', 'め'] <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 18:02:51 <> 便乗して作ってみた。 <br>  <br> print u"".join([eval(("'\\x%x\\x%x\\x%x'"%((7&lt;&lt;5)+3,(2**7)+i[0],(1&lt;&lt;7)+i[1]))+".decode('utf-8')")for i in [[1,2],[1,17],[1,10],[2,1]]]) <br>  <br> もっと見にくく短くすっきり書きたい（笑） <br>  <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 20:08:55 <> 無駄に長くなってしまった <br> http://ideone.com/mWIR0 <br>  <br> jisx0208.1983なBDFフォントファイルを食わせると年賀の挨拶をします <>
デフォルトの名無しさん<>sage<>2011/01/01(土) 23:12:10 <> <a href="../test/read.cgi/tech/1288342460/413" target="_blank">&gt;&gt;413</a> <br> スレ違い <br> http://hibari.2ch.net/test/read.cgi/tech/1231384158/ <>
デフォルトの名無しさん<>sage<>2011/01/02(日) 00:37:50 <> ごめん <br> import turtle, time <br> t = turtle.Turtle() <br> a = [(-14, 30), (24, 9), (-16, 6), (10, 6), (2, 4), (-14, 8), (17, 6), <br> (33, 2), (33, 2), (32, 1), (32, 1), (32, 1), (32, 4), (33, 4), (32, 2), <br> (32, 2), (32, 2), (-1, 2), (1, 4), (2, 5), (-15, 7), (30, 6), (-13, 3), <br> (13, 7), (33, 2), (33, 2), (-12, 2), (4, 8), (-16, 5), (10, 7), (33, 2), <br> (32, 1), (32, 1), (32, 1), (32, 2), (32, 2), (33, 3), (32, 3), (32, 2), <br> (32, 2), (-19, 7), (27, 2), (-27, 8), (2, 4), (2, 4), (-14, 8), (17, 6), <br> (33, 2), (33, 2), (32, 1), (32, 1), (32, 1), (32, 4), (33, 4), (32, 2), <br> (32, 2), (32, 2)] <br> for d in a: <br> &nbsp;&nbsp;(p, q) = (t.down, d[0]) if d[0] &gt; 0 else (t.up, -d[0]) <br> &nbsp;&nbsp;p(); t.left(q * 10); t.forward(d[1] * 10) <br> time.sleep(10) <>
デフォルトの名無しさん<>sage<>2011/01/02(日) 00:56:56 <> <a href="../test/read.cgi/tech/1288342460/415" target="_blank">&gt;&gt;415</a> <br> なんでスレチなんだ・・・ <a href="../test/read.cgi/tech/1288342460/415" target="_blank">&gt;&gt;415</a> にはこれがPythonのソースコードには見えなかったようで。 <br>  <br> 誘導されたそのスレBrainFuckのスレだが、BrainFuckは立派な言語だぞ。 <br> Pythonとは違う。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/02(日) 07:59:00 <> Pythonとは違うんです(キリッ <>
デフォルトの名無しさん<>sage<>2011/01/02(日) 22:05:10 <> つーか&gt;&gt;←これでレス指定するのやめない？  <br> わざわざ戻って見るのだりーんだよね。  <br> いい加減コピペした方が見やすいって気づけいてるだろ？  <br> そういうことで次のレスからヨロシク。  <>
デフォルトの名無しさん<>sage<>2011/01/02(日) 22:56:37 <> ビューアぐらい使えよw <>
デフォルトの名無しさん<>sage<>2011/01/02(日) 23:01:03 <> 釣り <>
デフォルトの名無しさん<>sage<>2011/01/04(火) 08:13:18 <> a = "abcdefghijk" <br> b = a[:] <br> a is b #True <br>  <br> スライシングでは別のオブジェクトになるとマニュアルにあるのですが、 <br> なぜ同じオブジェクトを参照しているのでしょうか？ <br>  <br>  <>
デフォルトの名無しさん<>sage<>2011/01/04(火) 10:10:27 <> リストだとちゃんと別のオブジェクトになるよ <>
デフォルトの名無しさん<>sage<>2011/01/04(火) 10:15:29 <> &gt;422は (stringが)immutable であり、 <br> その中身もおなじ内容だから、という理解でいいのかな? <br>  <br> リストの場合はおなじ内容物でも「別のオブジェクト」になる、と <>
422<><>2011/01/04(火) 10:19:16 <> <a href="../test/read.cgi/tech/1288342460/423" target="_blank">&gt;&gt;423</a> <br> リストでは別オブジェクトになることは確認と理解をしております。 <br> 上述のコードでも別オブジェクトにならなければいけないはずなのですが、 <br> bがaと同じオブジェクトを示しているのが理解できずに悩んでおります。 <br>  <br>  <>
デフォルトの名無しさん<>sage<>2011/01/04(火) 10:59:57 <> stringobject.c <br> string_slice() <br>  <br> あと、長さ0, 1の場合は自動でinternされるみたいだから <br> PyString_From〜系の関数参照 <>
426<>sage<>2011/01/04(火) 11:04:11 <> tupleのスライスも同様の最適化をしてる <br>  <br> ま、イミュータブルのスライス演算を本気で最適化するつもりなら <br> [:]に限らず最適化できるはずなんだがな <br>  <br> データ構造がポインタ＋オフセット＋長さにしてあれば <br> スライス演算は本来オフセットと長さの調整だけで済み <br> イミュータブルなら全部O(1)になるのに <>
デフォルトの名無しさん<>sage<>2011/01/04(火) 11:11:20 <> …と思ったけど、やっぱりダメか <br> ys = xs[0:1] <br> del xs <br> とかしたときに、単純なO(1)な実装だとxs[2:]に入っていた要素も <br> 握りっぱなしになるから一種のリークになるな <>
デフォルトの名無しさん<>sage<>2011/01/04(火) 12:35:44 <> scheme のambに相当するものはないのでしょうか <>
デフォルトの名無しさん<>sage<>2011/01/04(火) 13:52:44 <> あるメモリのビット列を変数に格納するのではなくて <br> 関数型言語とかでの「ある内容物を変数というラベルで束縛する」という <br> 考え方をすればいいんじゃないの <br>  <>
デフォルトの名無しさん<>sage<>2011/01/04(火) 14:51:50 <> <a href="../test/read.cgi/tech/1288342460/429" target="_blank">&gt;&gt;429</a> <br> Schemeを学んでも目の前の機械の使い方を知らないとは… <br> Python ambでぐぐればいいだけじゃないか <br>  <br> それはともかく <br>  <br> (let ((i (amb 4 6 7)) <br> &nbsp; &nbsp; &nbsp; (j (amb 5 8 11))) <br> &nbsp; (if (prime? (+ i j)) <br> &nbsp; &nbsp; &nbsp; (list i j) <br> &nbsp; &nbsp; &nbsp; (amb))) <br>  <br> このようなものは、Pythonでは単に <br>  <br> [(i, j) for i in (4, 6, 7) <br>         for j in (5, 8, 11) <br>         if is_prime(i + j)] # is_prime()はどこかで定義 <br>  <br> こう書くような気がするな <>
デフォルトの名無しさん<>sage<>2011/01/05(水) 20:33:00 <> sageがnumpyと統合されたらいいのになあ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 08:47:00  BE:171806227-2BP(103)<> 「あ、Python？、スクリプト言語でしょ？　レベル低いね」って言われたので殺害した。 <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 08:48:36 <> まだその思いを払拭できない俺はまだまだらしい <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 09:19:41 <> Pythonで鞄を作り、 <br> Javaで看板を作り、 <br> C++で地盤を作ります。 <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 09:49:14 <> <a href="../test/read.cgi/tech/1288342460/433" target="_blank">&gt;&gt;433</a> <br> 言語のレベルはアセンブラとかCよりも高いゼよ？ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 10:55:11 <> <a href="../test/read.cgi/tech/1288342460/433" target="_blank">&gt;&gt;433</a> <br> QtでGUI作って、処理が重いところだけ <br> C/C++で共有ライブラリ(DLL)にしておいて、 <br> 残りを全部Pythonで作成するとか <br> 最強のアーキテクチャだと思うんだけどな。 <br> # と思って、そういうアプリの開発に着手中。 <br>  <br> そんな狭量な輩は放っておけ。 <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 11:24:27 <> <a href="../test/read.cgi/tech/1288342460/437" target="_blank">&gt;&gt;437</a> <br> その手の階層化による利点ってコストゼロってわけでもないんだよな <br> 複数言語・環境間をコンテキストスイッチし管理するためのオーバーヘッドが生じる <br> Python＋C/C++なら何らかのグルーコードが必要だし <br> デバグもやりにくくなる <br>  <br> ライブラリのように、よく定義され再利用可能でモジュラリティがはっきりしたものを <br> Cで実装し、それを利用するのは上記のオーバーヘッドを考えても <br> 良いプラクティスだと思うけど、 <br> 「重いところだけ」という方法論は、なんだか危うく見えるな <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 11:29:59 <> へ？ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 11:35:48 <> 言いたい事があるんならもっとはっきりどうぞ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 11:37:11 <> 乳より尻が好きです <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 11:41:46 <> 知りたての言葉を無闇に使うもんじゃない <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 11:48:54 <> 勝間とか見てるとイライラするよね <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 13:16:39 <> perlで済むならpythonをあえて使おうと思わない <br> perlの方が安心する <br> 数値計算とかはやもえずnumpy使うけどＲの方が良いような気もする <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 13:23:55 <> <a href="../test/read.cgi/tech/1288342460/438" target="_blank">&gt;&gt;438</a> <br> 一見もっともそうだけどツッコミどころがいろいろあるな。 <br>  <br> まず、Python - C/C++の実行速度面でのスイッチコストは事実上無視できる。 <br> 少なくともネイティブ-Javaやネイティブ-.NET Frameworkのようなヘビーな切り替えコストはない。 <br>  <br> 開発コストの上昇、という点では、事実だと思う。少なくともゼロから学ぶという前提をおけば。 <br> しかしアプリケーションの実行環境の賢さという点では、 <br> C/C++よりもPython/Ruby/Java/.NETその他の方が圧倒的に上なのは誰も否定しないと思う。 <br>  <br> グルーコードというのはC/C++で作った共有ライブラリをPythonから <br> 利用するためのインターフェイス部分のことを言ってるんだと思うけど、 <br> 一般的にはコンポーネント同士のツナギとしてのプログラムのことを指すから、 <br> それはPython自身であって指摘自体がナンセンスということになるよ。 <br>  <br> Pythonは周辺ライブラリが簡単に手に入るところも魅力で、 <br> 実際のケースとしてグルーコードを自分で書く場合はほとんど発生しないと思う。 <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 13:49:54 <> Qtは使うな <br> MUMBLEが糞すぎる <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:06:34 <> <a href="../test/read.cgi/tech/1288342460/445" target="_blank">&gt;&gt;445</a> <br> いや、俺の書き方が悪かったんだろうけど… <br> &gt; 複数言語・環境間をコンテキストスイッチし管理するためのオーバーヘッドが生じる <br> これは「比喩」だから。 <br> コンテキストスイッチしてるのは、開発者というリソースね。 <br> モノリシックな言語は特定のIDE環境にひきこもっていればいいかもしれないが、 <br> 複数言語ではそうは行かない。 <br>  <br> &gt;グルーコードというのはC/C++で作った共有ライブラリをPythonから <br> &gt;利用するためのインターフェイス部分のことを言ってるんだと思うけど、 <br>  <br> その通り。 <br> ctypesならグルーはPythonで書く（Cなら#includeの一行で済むところで <br> 大量のボイラープレートを自分で書く必要があり、非DRYだ） <br> Python拡張を作る場合には、C側の実装で書く。 <br>  <br> なおJVM/.NET系で統一しているのなら、それは不要なので <br> グルーを書くコストだけはゼロに出来る。 <br>  <br> &gt;Pythonは周辺ライブラリが簡単に手に入るところも魅力で、 <br> &gt;実際のケースとしてグルーコードを自分で書く場合はほとんど発生しないと思う。 <br>  <br> は？俺はPythonでの開発を否定してるんじゃないよ <br> <a href="../test/read.cgi/tech/1288342460/437" target="_blank">&gt;&gt;437</a>が言っているような、「PythonとC/C++の分業」（性能ベースでの） <br> が、「最強のアーキテクチャ」と言えるほどバラ色だとは思えないと指摘しただけだ。 <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:17:18 <> <a href="../test/read.cgi/tech/1288342460/447" target="_blank">&gt;&gt;447</a> <br> 俺は437じゃないけどまさにその開発手法でやってる <br> そんな俺の寝言をのたまうなら。447の指摘はぜんぜんたいした問題ではないんだ <br> ちょっと慣れれば数分で解決する問題 <br>  <br> 437の言う開発手法で最も面倒なのは「ボトルネック」となる箇所を見つける部分だなぁ <br> これは正直、数をこなしても未だに面倒なのなの <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:24:16 <> あるpython libraryがctypes経由でfoo.soを呼び <br> 別なpython libraryがctypes経由でbar.soを呼んでるんだけど <br> bar.soがfoo.soを呼んでるのでfoo.soが２回呼ばれて <br> foo.soの中にあるfoo1(int x)が２回定義されてます <br> みたいなエラーで詰んだことが昔あった <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:27:55 <> <a href="../test/read.cgi/tech/1288342460/448" target="_blank">&gt;&gt;448</a> <br> 解決する／しないってのはおかしくないか？ <br> そういう開発は勿論「可能」だけど、 <br> コストやオーバーヘッドは決してゼロ化しない、単に積みあがるだけだ <br> 何を持って「解決」と言ってるの？ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:29:50 <> <a href="../test/read.cgi/tech/1288342460/447" target="_blank">&gt;&gt;447</a> <br> 445=437なんだ。ごめんね。 <br> 具体的にはフリーの動画オーサリングソフトを作ろうかと思ってるんだけど、 <br> よく使われてるソフトは片や(a)C+Lua、片や(b).NET製。 <br>  <br> (a)はC/C++用のプラグインの仕様が用意されておらず、プラグインはLuaで書く必要がある。 <br> 記述能力に限界もあるし、まだまだメジャーな言語とはいえない。 <br> GUIの改良は作者本人に依存している。 <br>  <br> (b)はプラグインは豊富だけどレンダリング速度に致命的な欠陥があり、 <br> こちらもアプリ本体のUIがいじれないという問題が生じつつある。 <br>  <br> Python+Qtならアプリ主要部分＋GUIを全てテキストファイルで表現可能なので、 <br> プラグイン作者の協力をより得やすいのではないか、という考えです。 <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:29:56 <> <a href="../test/read.cgi/tech/1288342460/450" target="_blank">&gt;&gt;450</a> <br> ウザい奴にレスするより早く解決できるよ！ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:33:10 <> <a href="../test/read.cgi/tech/1288342460/451" target="_blank">&gt;&gt;451</a> <br> ああ、スクリプタブルなアプリケーションを作りたいという話？ <br> 要件のほうが開発コストより優先度は高いのだから、そういう要件なら <br> 当然そういう方向はあるでしょう <br>  <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:34:12 <> <a href="../test/read.cgi/tech/1288342460/450" target="_blank">&gt;&gt;450</a> <br> こういう気違いがたまにいるよね <br> なんでゼロ化しなくちゃいけないんだよｗ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:35:46 <> <a href="../test/read.cgi/tech/1288342460/454" target="_blank">&gt;&gt;454</a> <br> いや、別にゼロ化できなくてもいいけど、何をもって「解決」したといってるのかは <br> 全く理解できない <br>  <br> 解決の前と後で、具体的に何かが変わったのですか？ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:38:43 <> 馬鹿にされてくやしいの？ <br> 俺意味のない議論はしたくなんだよね〜 <br> もうちょっと経験積んだ方がいいよ <br>  <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 14:49:41 <> 例えばC拡張を作成する手段として、Cythonあたりだと <br> ・ソーストランスレータなのでデバッガビリティに非常に難がある <br> ・C/C++言語ではないので、Cの宣言をそのまま取り込めず <br> 　Cの定義Aに対応するA'を「自分で」書かなければならない <br> 　　コストがかかるだけでなく、一種のコード複製なのでメンテナンス上の <br> 　　問題にもなる（ctypesと同じ問題） <br> という印象を持ったけどね <br>  <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 16:58:00 <> Python+Qtアーキテクチャで作ってる時の素朴なツッコミ。 <br>  <br> 標準・周辺ライブラリの機能がかぶりまくり :) <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 17:04:21 <> PythonQTってなに <br> PythonでGUIが作れるの？ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 17:10:40 <> エキスパートPythonプログラミングとPythonクックブック買ってきてから気づいたけど、 <br> そもそもPython初心者だったでござるorz <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 17:21:15 <> <a href="../test/read.cgi/tech/1288342460/459" target="_blank">&gt;&gt;459</a> <br> PythonにQtを組み合わせるなら、そう。 <br>  <br> PythonQtのことを言ってるなら、こいつはQtを使ったC++アプリケーションで <br> Pythonインタプリタを取り扱うためのライブラリらしい。 <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 21:07:16 <> <a href="../test/read.cgi/tech/1288342460/460" target="_blank">&gt;&gt;460</a> <br> とっととリファレンス本でも買ってこい <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 21:44:28 <> ipythonをWindowsで動かそうとしてるんだけど、うまくいかない。 <br> コマンドライン上では動くんだけど、 <br> Wikipediaに書いてあるようなwxPythonやQtのバックエンド上、 <br> つまり独立したコンソールウィンドウを表示しての操作ができない。 <br>  <br> Qtを動かす方法はわからなくて、とりあえずipythonxコマンドでwxPythonを動かそうとしたけど <br> wxPythonが入ってない。 <br>  <br> wxPython入れてみたら、twisted.pythonが入ってないと。 <br> twisted.python入れてみたら、zope.interfaceが入ってないと。 <br> zope3(zopeproject)入れてみたけど、変わらず。 <br> zope2を入れてみたけど、こいつはpython本体ごと <br> pythonの外側にインストールされてしまって、認識されない。 <br>  <br> なんなの、これ？ <>
デフォルトの名無しさん<>sage<>2011/01/06(木) 22:10:34 <> <a href="../test/read.cgi/tech/1288342460/463" target="_blank">&gt;&gt;463</a> <br> zope.interface は zope2 や zope3 とは別モノ。 <br> distribute という Python のパッケージマネージャをインストールして、 <br> easy_install zope.interface したらインストールできるんじゃないかな。 <br>  <br> 俺はコマンドライン上で使ってるけど。 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 02:24:48 <> おやすみ(^o^)ノ <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 03:54:11 <> <a href="../test/read.cgi/tech/1288342460/464" target="_blank">&gt;&gt;464</a> <br> なんと。zopeとは関係なかったのか。easy_installで単体で入れたら、 <br> ipythonxが動くようになったよ。ありがとう。 <br>  <br> Pythonで構築したQtアプリ上で追加のコンソールとして動かしたいので、 <br> もう少し調べてみる。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 11:56:16 <> ue3ってwxWidgetsを推してるのね <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 13:23:55 <> <a href="../test/read.cgi/tech/1288342460/467" target="_blank">&gt;&gt;467</a> <br> Unreal Engine3のことかな。 <br>  <br> 実際のところPython+wxWidgetsって、 <br> Python+Qtと比べてもそれほど遜色はないんだよね。 <br> QtにはGUI以外にもいろんな機能が実装されてるけど、 <br> そのほとんどはPythonが自前で持っちゃってるので。 <br>  <br> 特に小さなアプリを作るときは、Qt+PySideで10MB越えするのを <br> 添付して配るのは大げさすぎる気がしないでもない。 <br>  <br> ま、乗りかかった船だからオレはQtで行ってみるよ。 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 13:35:33 <> wx, gtk, Qt の中で、一番Cocoa対応がマトモなのがQtなんだよね。 <br> WindowsとLinuxだけでよければwxとQtが選択肢になり、 <br> Linuxだけでよければ全部大丈夫 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 13:41:27 <> PySideはまだなんかおかしい点が所々にあって、 <br> PyQtからの移植が一筋縄ではいかないときがある。 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 14:11:12 <> どっかの外人が「もーPySideバグだらけで2度とやらね」ってぼやいてたな <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 14:43:22 <> &gt;&gt;&gt; ctypes.c_int(1) == 1 <br> False <br> &gt;&gt;&gt; ctypes.c_int(1) == ctypes.c_int(1) <br> False <br> &gt;&gt;&gt; ctypes.c_int(1).value == 1 <br> True <br> これでハマった…… <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 15:12:29 <> まともなGUIライブラリが標準で付属してればなぁ。 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 16:00:12 <> Qt = Linux系・Mac向け <br> Wx = Linux・Windows、ときどきMac <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 16:27:48 <> wxはMacにはあんまり向いてないの?Mac対応のwxPythonなアプリをたまに見るけど <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 16:32:22 <> 向いてないわけではないけど <br> Mac向けアプリ作るならWxじゃなくていいよ <br> 474は恐らく対象OSの話 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 16:46:45 <> シンプルで <br> マルチプラットフォーム対応で <br> ネイティブのルックアンドフィールが使えて <br> サイズが小さくて <br> ライセンスがゆるい <br> GUIライブラリが欲しい。 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 16:54:14 <> 　　　　　　　＿＿＿_ <br> 　　 　 　 ／＿＿＿　＼ <br> 　　　　／　 |´・ω・`|　 ＼　いいよ〜 <br> 　　 /　　　　￣￣￣　　　＼ <br> 　　 |　 i　う WxPythonてヽ <br> 　　└二/　　　　　　 　 　 l <br> 　　　　 |　　　,､___,　　　　ノ <br> 　　　　 ヽ＿二コ/　　 ／ <br> 　　 _＿＿＿＿/__／´ <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 17:41:26 <> ncursesが最強ってことで <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 17:44:24 <> <a href="../test/read.cgi/tech/1288342460/477" target="_blank">&gt;&gt;477</a> <br> それだったらtk(Tkinter)かwxPythonの2択だな。 <br> どちらも1MB強の共有ライブラリ(dll)をつけるだけ。 <br>  <br> QtはLGPLになったのでフリーソフトとしてなら使えるようになった。 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 17:53:45 <> <a href="../test/read.cgi/tech/1288342460/476" target="_blank">&gt;&gt;476</a> <br> レスサンクス。Mac用のアプリを作るならwxより良いものがあるよってことかな <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 17:58:06 <> <a href="../test/read.cgi/tech/1288342460/481" target="_blank">&gt;&gt;481</a> <br> Mac OS Xネイティブだけでいいなら、 <br> PyObjCで Objective-C/Cocoaにアクセスできるそうなｗ <br>  <br> でもよほどOSの突っ込んだことをやりたいんじゃない限り、 <br> マルチプラットフォームなツールキットを使ったほうがいいと思うけど。 <br> 生産性も高いし。 <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 19:10:33 <> GPLはいいけど、LGPLってわかりにくい。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 20:47:23 <> New BSDとBSD Licenseくらい違う <>
デフォルトの名無しさん<>sage<>2011/01/07(金) 22:02:14 <> pipだeasy_installだvirtualenvだ2.6だ、で疲れた。 <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 00:27:44 <> <a href="../test/read.cgi/tech/1288342460/485" target="_blank">&gt;&gt;485</a> <br> ActivePythonをインストールすれば、easy_installは最初からバンドルされてるよ。 <br> それからeasy_installでパッケージをインストールすれば、 <br> そのパッケージが必要とする他のパッケージも再帰的にインストールしてくれる。 <br>  <br> でもWindows向けPythonパッケージでよくある単独インストーラーだと、 <br> 再帰的チェックまではやってくれないんだよね。 <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 01:22:07 <> distutil2も参戦だ！ <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 01:51:08 <> Perl使いはPerler、Ruby使いはRubyist、 <br> ではPython使いは？　Pythologist？ <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 01:55:30 <> PHPer(笑) <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 02:35:19 <> pythonist <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 02:55:11 <> pythonista <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 03:03:03 <> むしろ pythonomist <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 03:16:02 <> <a href="../test/read.cgi/tech/1288342460/486" target="_blank">&gt;&gt;486</a> <br> ActivePythonならpypmだろ <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 03:23:54 <> Pythonese <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 03:24:01 <> <a href="../test/read.cgi/tech/1288342460/488" target="_blank">&gt;&gt;488</a> <a href="../test/read.cgi/tech/1288342460/492" target="_blank">&gt;&gt;492</a> <br> 「ニシキヘビ学」ってなんだよｗ <br> どんな研究分野なんだ <br>  <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 09:11:49 <> pythologist <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 09:36:25 <> pythoneer <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 09:38:21 <> python tamer <br>  <br> 経験上漏れがこういうのを書き込んだ途端に <br> いい加減にしろって怒られる確率が大 <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 10:25:55 <> A Python **** <br>  <br> 英語は正しく使うのがPythonic <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 11:07:21 <> こういうときは冠詞なくてもいいんだぜよ。 <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 11:54:07 <> 上級python使いはpythoness(魔女)で <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 14:14:53 <> オススメのwebスクレイピングライブラリ教えろ <br> ただし、レスする権利は3つ以上試した人だけな <br> はいどうぞ <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 14:40:28 <> Django <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 18:31:28 <> import re <>
デフォルトの名無しさん<>sage<>2011/01/08(土) 20:14:09 <> 自力 <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 10:51:21 <> (^o^)オハ <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 13:27:06 <> TIOBE Programming Language of the Year <br>  <br> Year Winner <br> 2010  Python　← <br> 2009  Go <br> 2008  C <br> 2007  Python <br> 2006  Ruby <br> 2005  Java <br> 2004  PHP <br> 2003  C++  <br>  <br> ttp://www.tiobe.com/index.php/content/paperinfo/tpci/index.html <br>  <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 16:08:59 <> Pythonも安定期から成熟期に入ったということだな <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 16:21:14 <> <a href="../test/read.cgi/tech/1288342460/508" target="_blank">&gt;&gt;508</a> <br> それは皆がPython3000(Python3.0 or 3.1)を使うようになってからじゃね？ <br>  <br> ちなみにオレは、周辺ライブラリの関係で否応なしにPython-2.6だ。(2.7ですら早過ぎる) <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 16:32:19 <> オライリーから本でるみたい <br> http://www.oreilly.co.jp/books/9784873114750/ <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 18:11:58 <> <a href="../test/read.cgi/tech/1288342460/509" target="_blank">&gt;&gt;509</a> <br> GAEやってる俺は2.5 <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 18:21:20 <> 2.6が一番多いだろうなぁ <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 19:26:17 <> <a href="../test/read.cgi/tech/1288342460/511" target="_blank">&gt;&gt;511</a> <br> 同志 <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 19:34:52 <> 2.6 <br> 2.7に移行するメリットはあまりないし、3.1なんかライブラリが使えないし。 <>
デフォルトの名無しさん<>sage<>2011/01/09(日) 23:07:27 <> <a href="../test/read.cgi/tech/1288342460/508" target="_blank">&gt;&gt;508</a> <br> 2.x系 - 成熟期 <br> 3.x系 - 黎明期(?) <br>  <br> 3.x系は安定期にすらたどり着けるのか結構不安だw <br> ライブラリ見つかんねー、と言われなくなるのはいつになるやら <>
デフォルトの名無しさん<><>2011/01/10(月) 00:23:34 <> Pythonにて作成していたコマンドラインツールをGUIにしようと思い <br> PyGtkを調べているのですがわからない点があります。 <br> そのコマンドラインツールはsocketでデータを受信し、受信したデータを表示するというツールです。 <br>  <br> PyGtkでウインドウやボタンなどを作りあとは連携させるだけなのですが、 <br> socketからデータを受信するために無限ループをさせており、 <br> "gtk.main()"より前にsocketループに入るとウインドウが表示されず、"gtk.main()"を前に書くと <br> socketのループに入れません。 <br>  <br> これはどのように解決できますでしょうか？ <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 00:45:48 <> asyncore <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 00:53:46 <> 別スレッドでsocket使え <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 03:04:42 <> アサシン楽しそうだな <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 03:05:27 <> 誤爆 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 10:57:04 <> <a href="../test/read.cgi/tech/1288342460/516" target="_blank">&gt;&gt;516</a> <br> 一般論 <br>  <br> GUIアプリは、「イベントを取得してそれに応じた処理する、のを延々と繰りかえす（イベントループ）」 <br> で動いているので、イベントハンドラで時間のかかる処理をすると、そのあいだGUIが応答しなくなってしまう。 <br>  <br> だから普通、GUIアプリで時間のかかる処理をするときは、別のスレッドを起動してそこで処理する。 <br>  <br> ただしソケット通信の場合は、OSが非同期IO機能（データが到着したらOS側から通知してくれる。それまで他のことをしててOK） <br> を備えているので、それを使ってもいい。 <br> Pythonの標準ライブラリには、asyncoreってのがあってそれを支援してくれる。 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 11:38:01 <> 原理論 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 11:51:32 <> 516じゃないけど勉強になった <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 11:51:57 <> import 角電池 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 12:40:13 <> 細かいことだけど、non-blocking I/O と asynchronous I/Oは違う <br> Pythonのasyncoreは、名前はasyncだけど、やってるのはnon-blocking I/O <br> O_NONBLOCKとか使うのがnon-blockingで <br> aio_write()とか使うのがasynchronous <br>  <br> Windowsではoverlapped I/Oという用語があって、これはasynchronous I/O相当 <br> StevensのUnix Network Programmingにはasynchronous I/Oのほうが <br> 本質的に効率がいいと書かれているけど、Unix系では移植性がよくて枯れている <br> non-blocking I/Oが使われていることが多いと思う <br> Windowsではasynchronous I/OがIOCPと一緒によく使われてる <br>  <br> デザパタ用語で前者がreactor、後者がproactorと呼ばれることもある <>
デフォルトの名無しさん<><>2011/01/10(月) 13:27:47 <> asyncoreを調べてみたのですが、 <br> asyncore.loop()を使うと、やはりそこで動作が止まってしまいます。 <br>  <br> asyncore.loop( count=10, timeout=10) <br> などとすると、しばらくすると受信処理が終わってしまいます。 <br> (受信が終わってからそれ以下の作業に入ります。 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 13:51:10 <> <a href="../test/read.cgi/tech/1288342460/525" target="_blank">&gt;&gt;525</a> <br> asyncoreを使ったことがないのに、名前だけみて適当なことを書いた...反省 <br> というか、asyncoreはO_NONBLOCKすらしてないですね。 <br>  <>
デフォルトの名無しさん<><>2011/01/10(月) 14:16:44 <> Twistedを使えとか言いだすアホが登場する予感 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 14:18:02 <> Twistedを使え <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 14:26:12 <> どうせ一回しか呼んでないんだろうな <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 14:30:05 <> サンプルコード書いてやりたいけど、PyGTKが分からん。 <br> ワーカすれっどがデータを受信したら、どうやってメインスレッドに通知すればいいんだ？ <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 14:41:45 <> Twisted使えばいいじゃない？ <br> 何でだめなんだ？ <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 14:48:57 <> 重いから <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 14:50:44 <> 余計な外部ライブラリに依存すんのって嫌じゃね。 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 15:08:58 <> <a href="../test/read.cgi/tech/1288342460/527" target="_blank">&gt;&gt;527</a> <br> ん？ちゃんとよく読んでないけど <br> sock.setblocking(0) <br> とか呼んでないか、asyncoreで <br> これがO_NONBLOCK相当のはず <br>  <br> <a href="../test/read.cgi/tech/1288342460/532" target="_blank">&gt;&gt;532</a> <br> greenlet使える環境なら <br> 今ならgeventとかのほうがいい <br> http://nichol.as/asynchronous-servers-in-python <br> 速いし、プッシュモデル（コールバックスタイル）でなくプルモデルで <br> コーディングできるからずっと書きやすく、標準ライブラリにも <br> モンキーパッチを当ててあっさりnon-blocking化できる <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 15:12:31 <> 標準ライブラリでやれ。 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 15:18:57 <> asyncoreのselect()は効率悪いし <br> ありもののライブラリ相当のものを作るのは車輪の再発明 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 15:48:26 <> <a href="../test/read.cgi/tech/1288342460/531" target="_blank">&gt;&gt;531</a> <br> ありがとうございます。 <br> 私もPyGtkを始めたばかりなのと、プログラミングの勉強を初めて間もないのでよくわかっていません。 <br>  <br> もしよろしければ、PyGtkを使っているものでなくても構いませんので、サンプルをいただけると助かります。 <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 15:58:11 <> <a href="../test/read.cgi/tech/1288342460/538" target="_blank">&gt;&gt;538</a> <br> 単純すぎるけど、一応うごくのができた。 <br> http://codepad.org/o0ixm3Km <br>  <br> けど、Twistedみたいなのを使ったほうが簡潔にできるんだろうね。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 16:03:36 <> すみません。 <br> あるベクトルを正面として、90度上下左右方向のベクトルを求めたいのですが、どうすれば良いでしょうか？ <br>  <br> D3DXMatrixRotationAxis で正面方向を軸に90°回そうとしたのですが、 <br> 正面で90度回しても上下左右を向く訳がないと気付き・・。そもそもその軸が求まれば解決なのですが； orz <>
540<>sage<>2011/01/10(月) 16:05:47 <> すみません掲示板トップから盛大に板違いの誤爆しました；　失礼しました； <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 16:07:45 <> <a href="../test/read.cgi/tech/1288342460/540" target="_blank">&gt;&gt;540</a> <br> va, vb があったら、 <br> vc = cross_product(va, vb) <br> vd = -vc <br> ve = -va <br> vf = -vb <br>  <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 16:31:28 <> やさしいな <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 16:54:53 <> <a href="../test/read.cgi/tech/1288342460/539" target="_blank">&gt;&gt;539</a> <br> asyncoreだとこれはできないの？ <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 17:29:42 <> gtkのことは知らないが、<a href="../test/read.cgi/tech/1288342460/516" target="_blank">&gt;&gt;516</a>が求めているのはたぶんこれ <br> http://www.pygtk.org/pygtk2tutorial/sec-MonitoringIO.html <br> どうしてもシングルスレッドにこだわるならこの方法しかない <br> twistedあたりだと、こういうものを使ってUIイベントループに寄生する仕組みが <br> 最初からある <br>  <br> コネクション一個しか扱わないのなら、このケースでasyncoreの類を使う意味は全く無い <br> asyncoreは自分でselect()をまわすので、Xのイベントループと共存させるなら <br> 別のスレッドが必要になる <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 17:50:37 <> 記事に載っていたanntoolsを試してみたいのですが、 <br> （http://gihyo.jp/dev/serial/01/pythonhacks/0007） <br>  <br> Python 3.1.3でanntoolsをインポートすると無いって怒られます。 <br> 3.0しか対応してないのですか？ <br>  <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 18:04:20 <> <a href="../test/read.cgi/tech/1288342460/545" target="_blank">&gt;&gt;545</a>のやつで、<a href="../test/read.cgi/tech/1288342460/539" target="_blank">&gt;&gt;539</a>を書きかえた。 <br> http://codepad.org/PehDqzRL <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 18:32:11 <> <a href="../test/read.cgi/tech/1288342460/546" target="_blank">&gt;&gt;546</a>です。　解決しました。 <br> http://pypi.python.org/pypi/anntools/0.5.1 <br> でanntoolsをダウンロードして入れればいいのですね。 <br> お騒がせしました　m(..)m <>
デフォルトの名無しさん<>sage<>2011/01/10(月) 19:40:21 <> PySide <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 00:20:30 <> よこちち <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 02:03:47 <> その発想はなかった <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 07:19:33 <> プログラミングの勉強をしております。 <br>  <br> コマンドラインアプリケーションを作って勉強していたのですが、グラフィカルなアプリケーションも <br> 作ってみようと先日よりPyGTKを勉強しております。 <br> その勉強の中で疑問に思ったことがあります。 <br> コマンドラインアプリケーションを作っている際は、クラスをいくつか作りトップレベル？(クラスや関 <br> 数の外、モジュールファイルに直接)よりクラスを操作していましたが、PyGTKではウインドウを扱う <br> クラスがメインになってしまいました。 <br> ウインドウを扱うクラスの中で別のクラスインスタンスの作成やメソッドの操作を行なっています。 <br>  <br> ウインドウを扱うプログラムは通常度のような書き方(設計)になっているのでしょうか？ <br> ウインドウを扱うクラスを中心にするプログラムのメリットやデメリットはありますでしょうか？ <br>  <br> 勉強中の身ですがプログラムを描きながらどうも違和感があったため、質問させていただきます。 <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 07:45:41 <> イベントドリブンでぐぐれかす <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 07:50:47 <> 実はGUIってしっくりこないんです！ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 08:52:00 <> <a href="../test/read.cgi/tech/1288342460/554" target="_blank">&gt;&gt;554</a> <br> やめろｗｗ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 14:02:56 <> ハリウッドアーキテクチャ！！！ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 15:19:38 <> <a href="../test/read.cgi/tech/1288342460/554" target="_blank">&gt;&gt;554</a> <br> これの元ネタが未だにわからん <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 15:56:12 <> GUIって奴は馬鹿でも最低限の機能を使えるようにしたものだから <br> 俺みたいぷろふぇっしょなるにとっては無駄で非効率な代物でしかない <br> オマエらにとってもそうだろう？ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 15:57:03 <> &gt;&gt; 552 <br> http://www.dotup.org/uploda/www.dotup.org1354305.png <br> ユーザからの入力をさばくには、こういう構造にするしかないでしょ。 <br>  <br> だからPyGTKに限らず、GUIアプリケーションというのは、 <br> 基本的にすべてああいうスタイルで書く。 <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 16:22:29 <> <a href="../test/read.cgi/tech/1288342460/559" target="_blank">&gt;&gt;559</a> <br> Inkscapeでどうやってそれを書いたんだ？ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 16:24:40 <> こういう図をササッと作られると仕事ができる奴みたいで癪に障るな <br> むかつくから作図のノウハウ全部開陳してけ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 19:10:11 <> スレタイ嫁 <>
デフォルトの名無しさん<><>2011/01/11(火) 20:43:29 <> とりあえずhow to be hackerで最初にpython勉強しろって書いてあったからここにきた <br> 何からやりゃいいんだ？英語できなくても大丈夫なのか？ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 20:58:35 <> how to be hackerに、どの言語よりもまず英語を勉強するように書いてほしいわ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 21:01:43 <> <a href="../test/read.cgi/tech/1288342460/564" target="_blank">&gt;&gt;564</a> <br> 英語勉強しろって書いてあるよ馬鹿たれ <br> 俺が言ってるのはpython習得に英語が必要かって聞いてるんだよ <br> この文章踏まえてもう１回俺のレスちゃんと読め <br>  <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 21:03:24 <> だから絶対必要だって言ってるだろ <br> ライブラリのドキュメントはこんな風に配布されてる <br> http://matplotlib.sourceforge.net/contents.html <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 21:06:28 <> いや、だから辞書引きながらでもいいのかってことだよ <br> 辞書引きながらと英語がきちんとできるのでは全然違うだろ <br> 辞書引きレベルでもおｋなのってことを聞きたいの？ <br> 今から英語マスターしてたら膨大な時間かかるし。どれぐらいのレベルならいいんだよ <br>  <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 21:14:14 <> <a href="../test/read.cgi/tech/1288342460/567" target="_blank">&gt;&gt;567</a> <br> それが可能かどうかは俺が決めることじゃないだろ <br> どちらにしろ英語は勉強しろよ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 21:18:03 <> 辞書引きながらと英語がきちんとできるならいいじゃん <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 21:20:02 <> <a href="../test/read.cgi/tech/1288342460/569" target="_blank">&gt;&gt;569</a> <br> 日本語でおｋ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 21:40:02 <> なんでもいいからPythonのお勉強しろ <>
デフォルトの名無しさん<>sage<>2011/01/11(火) 21:50:17 <> <a href="../test/read.cgi/tech/1288342460/563" target="_blank">&gt;&gt;563</a> <br> How to become a hackerだと思うけど <br> Python・Java・HTMLのような環境に依存しない言語を学べって意味のはず <br> MS言語をこき下ろしてるのはそこら辺が大きく関わってる <br> 英語できないならそれを先に学べと思うが <br> どうしても嫌ならCとか王道の苦痛を味わったほうがいい <>
デフォルトの名無しさん<><>2011/01/12(水) 00:40:55 <> PyGtkの勉強をしようと思い、 <br> 初めてのPython <br> を購入し読みました。 <br>  <br> 次にマルチスレッドとGtkの勉強をしようと思うのですがおすすめの書籍はありませんか？ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 00:44:19 <> Zed Shaw先生からメッセージをよく読んどけ。 <br> http://po3a.blogspot.com/2010/05/by-zed-shaw.html <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 00:46:27 <> <a href="../test/read.cgi/tech/1288342460/574" target="_blank">&gt;&gt;574</a> <br> だいたい合ってる <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 01:14:27 <> <a href="../test/read.cgi/tech/1288342460/573" target="_blank">&gt;&gt;573</a> マルチスレッドは、日本語の書籍だと <br> 結城浩の「Java言語で学ぶデザインパターン入門マルチスレッド編」が重要な技法を網羅してて良いんだけど、 <br> 値段が高いのと言語がJavaなのが難かも。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 01:16:19 <> オライリー大人買いできない貧乏人はプログラミングすんな <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 01:25:45 <> オライリーを本棚に飾ってるアホどもは、 <br> シュプリンガーとかを読んでる人種に馬鹿にされてることを知れ。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 01:33:59 <> どこからオライリーが出てきたのかも分からんし、 <br> 何を劣等感丸出しにしてるのかも分からん。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 01:55:20 <> カネも書籍もなくても、 <br> PCとネット回線と英語さえあれば、いくらでも勉強できる。 <br> たぶん。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 02:15:53 <> 図書館使えよ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 02:56:48 <> <a href="../test/read.cgi/tech/1288342460/567" target="_blank">&gt;&gt;567</a> <br> 書いてあることが理解できりゃ、エスパーでも辞書引きながらでもなんでもいい。 <br> が、1単語ずつ辞書引いて、1文読むのに10分かかって、だと理解するのに時間がかかりすぎる。 <br> じゃあどの程度できりゃいいのか？　それはアンタがドキュメント読むのにどんだけ時間かけられるかで決まってくるんで、俺にはなんともいえん。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 03:50:37 <> http://www.amazon.co.jp/dp/0521537622 これいい。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 04:33:32 <> <a href="../test/read.cgi/tech/1288342460/581" target="_blank">&gt;&gt;581</a> <br> プログラミング関係の蔵書がそこそこ充実してる図書館がどこにでもあると思わないで… <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 08:55:46 <> 貧乏人というより投資する価値観の違い <br> 本を買うだけでしたり顔してる連中は基本的に劣ってる <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 09:52:26 <> ツンデレ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 11:28:31 <> PythonとRで統計処理を自動化するより、 <br> Excelのクソみたいなマクロを書くほうが上司に評価されます。MS死ね。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 11:30:13 <> Pythonで社内システムを構築するより、 <br> MS製品を導入するほうが上司に評価されます。MS死ね。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 11:42:17 <> 属人化嫌いだってよ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 13:12:32 <> Excelで動いてた面倒な入力とデータ加工の業務を <br> Pythonで自動化してあげたら本当に手が減ったからと <br> それまでの担当者が数名クビになりました <br> 経営的にはGJなんだろうけど複雑な気持ちです <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 13:15:43 <> <a href="../test/read.cgi/tech/1288342460/590" target="_blank">&gt;&gt;590</a> <br> 余った時間で創造的なことをやればよかったのにね、 <br> というのがPython流の考え方になるのかねぇ。 <br> 明日は我が身、でもある。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 13:20:43 <> つまり「手を抜くな」って事だ <br> 技術でも知識でも経験を積むに「試す」「失敗(＋成功)する」「疑問に思う」の繰り返しがないやつは進歩しない  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 13:54:47 <> <a href="../test/read.cgi/tech/1288342460/590" target="_blank">&gt;&gt;590</a> <br> コンピュータに職奪われたわけか <br> そんなアナログ作業をデジタルでやったら金食い虫 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 14:03:05 <> プログラミングは才能と金がない奴は進歩しない <br> ネットのジャンク情報を無能がいくら読み漁りいじくりまわそうがかなわない <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 14:18:08 <> 才能よりも興味と好奇心 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 16:23:10 <> 上手に「手を抜く」発想が必要 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 16:36:12 <> 発想＝才能 <br> 結局才能に行き着くんだよ馬鹿たれ <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 16:41:07 <> 才能０じゃ駄目だけど <br> 才能だけでも駄目だと思う <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 16:42:00 <> 諦めたら終わり <br> 満足してしまっても終わり <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 16:57:54 <> 少なからずアスペルガー的気質がないとプログラミングに向いてないのは確か。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 17:00:30 <> 確かに間違いに寛容な香具師は向いてないな <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 17:02:44 <> Pythonと関係あるのは何レスくらい前だろうね <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 17:08:44 <> pythonなんて一般人はほとんど知らないんだからレスなんて少なくて当たり前だろ <br> スレの勢いをあげて一般人にもpythonスレが目に付くようにしないと永久に普及しない <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 17:10:12 <> <a href="../test/read.cgi/tech/1288342460/574" target="_blank">&gt;&gt;574</a> <br> 感動した <>
デフォルトの名無しさん<><>2011/01/12(水) 17:11:09 <> <a href="../test/read.cgi/tech/1288342460/603" target="_blank">&gt;&gt;603</a> <br> じゃあageようぜ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 17:42:20 <> Python.jpを何とかしてほしい。 <br> Pythonに興味を持った人があのページを見て一体何が分かるのか。 <br> まあ、単なる温泉旅行団体なんだろうけど。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 17:46:51 <> try: <br> &nbsp;&nbsp;角電池 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 17:53:41 <> だれかが質問を書かないと、このスレは荒れる。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 17:55:11 <> <a href="../test/read.cgi/tech/1288342460/606" target="_blank">&gt;&gt;606</a> <br> 気持ち悪っ！ <br> 俺はPython.jpなんて全く知らないけどPython使うのになんの苦労もしてないぜ <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 18:23:46 <> 別に意見として気持ち悪くはないとおもうけど。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 18:27:52 <> 俺も温泉旅行行きたい <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 18:48:42 <> <a href="../test/read.cgi/tech/1288342460/606" target="_blank">&gt;&gt;606</a> <br> はげしくどうい <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 19:19:27 <> PyGTKを勉強するのに適したGTKの書籍はありませんか？ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 19:35:14 <> ありますん <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 20:28:15 <> perl使いになればよかったよ。なんでpythonなんて学んじまったんだ <br> 誰も質問なんてしてこないじゃないか！言語オタにはつまらない奴と思われてるし <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 20:43:46 <> 俺、ラクダ本の Perl 6 対応版が出たら Perl 使いになるんだ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 20:45:37 <> 対応版以前にPerl6はいつ出るんだ？ <br> 開発者が、一生でなくていいって言ってるんだぞ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 20:51:52 <> <a href="../test/read.cgi/tech/1288342460/615" target="_blank">&gt;&gt;615</a> <br> Perlも勉強しやがれ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 21:10:49 <> 何か質問はございませんかー <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 21:13:14 <> <a href="../test/read.cgi/tech/1288342460/619" target="_blank">&gt;&gt;619</a> <br> <a href="../test/read.cgi/tech/1288342460/613" target="_blank">&gt;&gt;613</a> <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 21:38:14 <> GTKは糞 <br> 何度でも言うよ <br> GTKは糞 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 21:42:03 <> <a href="../test/read.cgi/tech/1288342460/621" target="_blank">&gt;&gt;621</a> <br> お前Linux版のGTKスレにも書いただろ。 <br> 暇だな。頑張れ。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:10:32 <> まー GTK on Windows はくそ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:16:19 <> gtkmmはいいと思うぞ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:25:15 <> gtkmmも使ったことあるから否定はしないが <br> Qtと比べたら雲泥の差 <br> GTKが糞と言われても仕方ない <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:32:05 <> メンテナンス性の面で僕が気に入っている言語は Python だ。シンプルで <br> きれいな構文、オブジェクトのカプセル化、充実したライブラリのサポート、 <br> そしてオプションの名前付きパラメータがある。メンテナンス性が悪い言語 <br> の一例は Perl である。うん、僕は確かにそう言ったよ。撤回するつもりはない。 <br> -- Bram Cohen <br>  <br> Python が好きなのと同じぐらいRubyが好きじゃない。Perlみたいな「TMTOWTDI」哲学が <br> 多すぎる。Perl ほどひどくはないにしても、似たような可読性とメンテナンス性の問題が <br> 出てくる。Ruby を使わなければならないなら使うこともできるけど、幸いそういうことはない」 <br> -- Jonathan Ellis <br>  <br> Rubyの本を読んでて頭にひょこっともたげた疑問ってのは「今さら?」というものだ。 <br> ご苦労様なこった。この言語設計者 (Matzこと教祖まつもとゆきひろ様) っていうのは <br> なんでわざわざこんなものを創ったんだ? たどり着く結論は毎度同じものだ。 <br> -- Bruce Eckel <br>  <br> Ruby は低品質で、ゴミクズソフトが頼っているクソみたいな <br> インタプリタにも関わらず不当に勢いを得て今までずるずる <br> -- Zed Shaw <br>  <br> 「やはり他のスクリプト言語作者とは格が違う。そもそもPerlやRubyというのは <br> 一部のオタクどもが楽をするためだけに存在している言語で、かれら教育のことなんか何も考えてない。 <br> しょせんかれらは狭い世界に閉じこもる運命にあるのだ。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:38:06 <> Gtkは糞といってQtをおしてくる人がいるが、そいつにGtkとくらべてQtのメリットを聞いても返事がない <br> Linuxをちょっと触ったことある連中がWindowsを糞と言ってるのと同じように思うんだ <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:38:53 <> やっぱりQtのAPIが一番すっきりしてる。C++ってのが気に食わないけど。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:40:08 <> <a href="../test/read.cgi/tech/1288342460/627" target="_blank">&gt;&gt;627</a> <br> 流れが叩き合いっぽくなってるけど、 <br> Qtはいいものだ。 <br>  <br> オレ、今作ってる動画が完成したらQt+Pythonでソフト作るんだ……。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:41:44 <> GTKはWin/MacでネイティブのLook & Feelが使えないのがイヤん。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:51:37 <> WindowsとMac OS XとGTKとQtに対応した、 <br> Python用のGUIライブラリを誰かが作ればOK。 <br> ニートのみなさん頑張って作ってくれよ。 <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 22:57:43 <> <a href="../test/read.cgi/tech/1288342460/626" target="_blank">&gt;&gt;626</a> <br> 言語の宗教戦争は無駄だとすぐ上に書いてあるのに <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 23:04:24 <> Zed Shawは分裂気質だから <>
デフォルトの名無しさん<>sage<>2011/01/12(水) 23:47:16 <> もりあがってるところ誠に申し訳ありませんが <br> Python で使える GUI フレームワークで <br> マルチスレッドと相性の良いものはどれでしょうか？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 00:03:55 <> GTK <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 00:09:09 <> マルチスレッドとの相性が良い悪いなんてあるのか？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 00:09:18 <> Django <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 00:10:55 <> そもそもPython自体がマルチスレッドと相性良くない <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 00:20:57 <> <a href="../test/read.cgi/tech/1288342460/627" target="_blank">&gt;&gt;627</a> <br> スレ違いだが。 <br> どちらも似たようなプログラムなわけだが、どっちが書きやすいように見える？ <br> ttp://library.gnome.org/devel/gtk-tutorial/stable/c39.html#SEC-HELLOWORLD <br> ttp://doc.qt.nokia.com/4.7/tutorials-widgets-childwidget.html <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 00:32:18 <> どじゃんぐり ころころ どじゃんくりこ <br> どじゃんご が 出てきて さあ たいへん。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 00:37:58 <> なごむなあ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 00:38:23 <> <a href="../test/read.cgi/tech/1288342460/638" target="_blank">&gt;&gt;638</a> <br> そんなことは無い。 <br> GILのせいで性能が出ないのは、マルチスレッドのユースケースのうちのごく一部。 <br> 非ネイティブスレッドのRuby 1.8とかに比べたらずっとスレッドとの相性が良い言語。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 01:26:34 <> <a href="../test/read.cgi/tech/1288342460/615" target="_blank">&gt;&gt;615</a> <br> そんなあなたにおすすめ <br> 「PerlユーザのためのPython移行ガイド」 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 01:29:18 <> すごくどうでもいいが <br> 個人的に蛇は割と好きなほう。家の下にアオダイショウとか住みついてる <br> すごいでかいから屋敷神に違いない。 <br>  <br> だからPythonにも割と惹かれるのかもしれない <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 04:46:10 <> windowsで配布まで考えるとgtkはランタイムファイルやなんかがごちゃごちゃ必要なんじゃなかったっけたしか <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 06:35:44 <> Tkinter最強伝説 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 08:23:04 <> <a href="../test/read.cgi/tech/1288342460/642" target="_blank">&gt;&gt;642</a> <br> GILのせいで性能でないのは関係ない (ｷﾘｯ! とか・・・もうねアホかと <br> 例えばPythonでも有効につかえるスレッドによるI./O待ちとかは単にリソースの無駄遣いなんなんだぜ <>
デフォルトの名無しさん<><>2011/01/13(木) 08:59:27 <> <a href="../test/read.cgi/tech/1288342460/627" target="_blank">&gt;&gt;627</a> <br> ここPythonのスレだろ？ <br> Pythonから使うこと考えてないの？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 09:29:47 <> Perlの勉強をしていたのですが、Pythonの勉強をしてみようと <br> Pythonの勉強をしております。 <br>  <br> Perlを勉強していたときは、簡単なデータの保存は自分でCSV形式に変換して <br> ファイルを保存していたのですが、Pythonではドのように保存するのが一般的なのでしょうか？ <br> Perlの用に自分でCSV形式にすることもできますが、pickleのようなものを使うのでしょうか？ <br> 勉強を始めたばかりで何も分かっておりませんが、pickleを使うと大きなデータはメモリを食うのではないか <br> など、いくつか疑問があります。 <br>  <br> 一般的に使われている方法や、それらの方法のメリットデメリットを教えていただけると助かります <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 10:06:29 <> python.jpがダメなのは同意だが、対抗の方がショボ過ぎるのも事実。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 10:31:46 <> <a href="../test/read.cgi/tech/1288342460/649" target="_blank">&gt;&gt;649</a> <br> リストとかタプルとかいろんな型をごちゃまぜにするのならpickleでいいと思うけど、 <br> そうじゃないならCSVでいいんじゃないかなぁ。 <br> pickleは人間がパッと見て分かるデータじゃないし、Python以外では一般的に使われない。 <br>  <br> メモリは、相当でかいファイルか相当低スペックのコンピュータだと知らないけど、 <br> そうじゃなかったら気にしなくていいと思う。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 11:39:55 <> perlでも大きなデータはメモリを食うよ <br>  <br> あと <br> ｘ　perlの用に <br> o　perlの様に <br> じゃないかな <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 11:41:13 <> <a href="../test/read.cgi/tech/1288342460/649" target="_blank">&gt;&gt;649</a> <br> 漏れは pickle して zipfile してる <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 11:42:49 <> <a href="../test/read.cgi/tech/1288342460/649" target="_blank">&gt;&gt;649</a> <br> YAMLとか <br> JSONとか <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 11:43:23 <> やっと知的な議論に突入したな <br>  <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 11:55:12 <> <a href="../test/read.cgi/tech/1288342460/649" target="_blank">&gt;&gt;649</a>,651 <br> csvは表状のデータにしか使えないから、オレはあんまり使わないんだよな。 <br>  <br> 自分のアプリでしか使わず、ユーザーに外でいじらせるつもりがないならpickleで十分。 <br> スクリプト系言語で使うデータならjson/yaml。 <br> 静的型付言語も含めて言語問わずに利用ししたいならxmlやprotocol-buffers。 <br>  <br> 比較的小規模な設定ファイルならiniも案外悪くない。 <br>  <br> 動作中のメモリ使用量なんて、問題が出たときに始めて考えればいいよ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 11:57:51 <> 何をシリアライズするかにもよるけどな。 <br> クラスの状態を保持するのにcsvを選択するのはよけいな手間でしかないし、 <br> ヒューマンリーダブルが求められる出力データにpickleもおかしい。 <br> この場合は何らかの（途中）処理結果ををデータとして出したいようだから、 <br> csvなりxmlなり<a href="../test/read.cgi/tech/1288342460/654" target="_blank">&gt;&gt;654</a>なりの方が一般的かと。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 12:01:15 <> そんなあなたにpySQLite <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 12:25:41 <> 個人的には、 <br> ちょっとした設定ファイルとか: Pickle <br> 構造的なデータ: XML, JSON <br> 単純なデータ: タブ区切りテキスト <br> テーブルデータ: SQLite <br> 数値データ: CSV, バイナリで吐く <br> Key-Valueデータ: gdbm, cdb, etc. <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 12:31:13 <> YAML XML SQL <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 12:42:46 <> <a href="../test/read.cgi/tech/1288342460/647" target="_blank">&gt;&gt;647</a> <br> うわっ、ひょっとしてスレッドで十分な場面でもIO多重化しちゃう人？ <br> 1万とか10万単位の並列数を扱うならともかく、今時なら数十どころか <br> 数百単位の並列数でもスレッドで十分だよ。 <br> ttp://developer.cybozu.co.jp/kazuho/2009/09/epoll-bac0.html <br>  <br> Pythonのスレッドが使い物にならないのは、 <br>  <br> 1) GIL を握ったままCPU100%使うスレッドが複数あるとき、マルチスレッドによる高速化がされない。 <br> 2) CPU100%使わないまでも、スレッドがたくさんあってその合計のCPU使用率が高い場合は、 <br> 　　GILのせいでOSが持ってる良い感じのスケジューラがうまく動かず、スレッドの応答速度が <br> 　　遅くなる場合がある。 <br>  <br> こういう場合はプロセス分けろって事だな。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 12:43:52 <> YAMLを使うのはキモオタの自己満足感が強い。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 13:01:38 <> まあ、さっさとIncremental GCか何かを実装して欲しいですね。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 13:09:02 <> CSVよりTSV <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 13:15:56 <> うわっ、     ス    で     で         しちゃう人？  <br> 万  万  を扱うならともかく、 <br> 握ったまま   使う と <br> 良い感じ  が 遅くなる <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 13:33:02 <> せっかくの知的な議論（ｷﾘｯ）が・・・ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 13:39:10 <> <a href="../test/read.cgi/tech/1288342460/661" target="_blank">&gt;&gt;661</a> <br> 頭悪そうだなお前 <br> 一言で言えばGILがあるかぎり同時に実行出来るPythonのコードは1つだけって事だ <br> お前の例は全く的を得ていない実に愚かなレスだ <br>  <br> もう少し勉強してこい <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:03:34 <> <a href="../test/read.cgi/tech/1288342460/667" target="_blank">&gt;&gt;667</a> <br> 並列処理のためにマルチスレッドを使う場合は、 <br> multiprocessing モジュールを使って実装すればGIL問題は発生しないよ。 <br> 標準のマルチスレッドの書き方と大差ない。 <br>  <br> http://lab.tricorn.co.jp/okt/721 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:06:04 <> <a href="../test/read.cgi/tech/1288342460/664" target="_blank">&gt;&gt;664</a> <br> 同意。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:15:02 <> <a href="../test/read.cgi/tech/1288342460/668" target="_blank">&gt;&gt;668</a> <br> いやお前・・・それはマルチスレッドじゃなくマルチプロセスだから・・・ <br> 根本的な事が解ってないんじゃないかな <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:15:16 <> 文盲どうしが好き勝手に自己主張してて見ててイライラする。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:18:51 <> <a href="../test/read.cgi/tech/1288342460/670" target="_blank">&gt;&gt;670</a> <br> http://oshiete.goo.ne.jp/qa/4901659.html <br> どっちも変わらないけど <br> リソース的にマルチプロセスが主流になってきてるね。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:20:30 <> これがゆとり教育の弊害か... <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:22:15 <> ゆとり教育だからこそサブカルに詳しいんじゃないのか？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:31:50 <> 教えて！goo wwwwwwwwwwwwwwwwwwwwww <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:39:13 <> http://www.google.co.jp/search?q=%E3%83%9E%E3%83%AB%E3%83%81%E3%82%B9%E3%83%AC%E3%83%83%E3%83%89+%E3%83%9E%E3%83%AB%E3%83%81%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9 <br>  <br> 教えて！系サイトしか解説文乗ってない件 <br> 悲しいピエロ涙目ｗｗｗ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:46:31 <> プログラミング「言語」の知識しか無い奴だらけで困る。 <br> それじゃクソみたいな業務アプリしか書けないだろ常考。 <br> コンピュータとかCPUとかOSとかアルゴリズムとかCGとか信号処理とか糞便爆発とか、 <br> 色々やらなきゃダメだし、そのほうが楽しいぞ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 14:57:05 <> Windowsにはfork()は無いからマルチプロセスはスレッドほど手軽とは <br> いえない気がするけどなあ <br>  <br> たぶんその辺の理由もあってmultiprocessingは色々制限があるのがうざい <br> これはmultiprocessingのドキュメントに書いてあるけど、たとえば <br> from multiprocessing import Pool <br> pool = Pool(5) <br> pool.map(lambda x: x * x, range(10)) <br> みたいなコードをREPLで試そうとしても動かない <br>  <br> 今はErlangとか言わなくともGoとかScalaとか並列処理に向いた言語いっぱいある <br> .NETでもPLINQとか出ててLINQをナチュラルに並列化できる <br> Javaあたりはそれほど抽象化はしてないけどutil.concurrentに頼ってる人多いだろう <br> GILなんてないし、便利で信頼できるプリミティブを用意してる <br>  <br> 俺もPythonの並列処理サポートは、「一応ネイティブスレッドが使えます」 <br> という意味でないよりはマシだけど、正直ショボいと思う <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:04:32 <> <a href="../test/read.cgi/tech/1288342460/667" target="_blank">&gt;&gt;667</a> <br> <a href="../test/read.cgi/tech/1288342460/661" target="_blank">&gt;&gt;661</a> のどこを読めばその程度の事を理解していないように読めるんだ？ <br>  <br> <a href="../test/read.cgi/tech/1288342460/647" target="_blank">&gt;&gt;647</a> がIO待ちの為にスレッドを使うことを否定しているから反論しただけで、 <br> GILが制約になる条件は<a href="../test/read.cgi/tech/1288342460/661" target="_blank">&gt;&gt;661</a>の後半に詳しく書いているだろ。 <br>  <br> そして、GILの為にマルチスレッドが使い物にならないケースは、マルチスレッドの <br> ユースケースのごく一部だ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:06:48 <> ひょっとしてRuby1.8と比べたから必死になって反論している人がいるのかな？ <br>  <br> Ruby1.9はPythonと同じになったし、ブロックするAPIを呼び出したらほかのスレッドも <br> 実行できなくなるのはRuby1.8だけじゃなくてPerlとかも一緒だからRubyをdisってる <br> わけじゃないよ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:12:06 <> たとえば、Perlはlibmysqlclient経由で並列にMySQLに問い合わせができない。 <br> ttp://d.hatena.ne.jp/tokuhirom/20090612/1244777290 <br>  <br> Pythonならネイティブスレッドが使えるので、並列にlibmysqlclient経由でMySQLに <br> 問い合わせができる。 <br> PythonでWebアプリを作る場合、プロセス一つあたり5〜50スレッドくらいで、そのプロセスを <br> コア数×2くらい起動すると、CPUも使い切れるし、全部プロセスにするよりずっと省メモリ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:12:37 <> <a href="../test/read.cgi/tech/1288342460/679" target="_blank">&gt;&gt;679</a> <br> GILが制約となる条件が <a href="../test/read.cgi/tech/1288342460/661" target="_blank">&gt;&gt;661</a>の１）と2)というのなら勉強しなおして来たほうがいい、割とマジで <br> IO待ちにスレッドを使うのは無駄多いというのは紛れもない事実 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:13:58 <> <a href="../test/read.cgi/tech/1288342460/680" target="_blank">&gt;&gt;680</a> <br> 指摘が的外れだからだろうｗ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:15:55 <> <a href="../test/read.cgi/tech/1288342460/683" target="_blank">&gt;&gt;683</a> <br> 的外れな上に、スレッドが使えないという話にプロセスを使えばいい！とか <br> マリーアントワネット風に意味不明な反論がおおいよなｗ <br>  <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:18:27 <> <a href="../test/read.cgi/tech/1288342460/682" target="_blank">&gt;&gt;682</a> <br> 間違いを指摘しろよ <br>  <br> 1)は、<a href="../test/read.cgi/tech/1288342460/667" target="_blank">&gt;&gt;667</a> の「同時に実行出来るPythonのコードは1つ」を詳しくいっているだけ。 <br> たとえば zlib で圧縮する場合とかは GIL を開放するから、 zlib.compress(data) はマルチスレッドで <br> 並列実行できるので、あえて「GILを握ったままCPU100%使う」と表現している。 <br>  <br> 2)は、そもそも1コアのCPUを100%使ってない（GILが無かったとしてもマルチスレッド化してもスループットが <br> 上がらない）状況でも、GILのせいで応答性能が悪くなるという問題を指摘している。 <br> 現行のPythonでは結構マジな問題だけど、Python 3.2 で new-GIL になると大分改善される。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:18:39 <> GIL問題以外にもPythonはスレッドのオーバヘッドが大きいよね <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:20:27 <> <a href="../test/read.cgi/tech/1288342460/684" target="_blank">&gt;&gt;684</a> <br> そもそもマルチスレッドのユースケースの *1つ* でマルチスレッドが使えないからと言って <br> 「マルチスレッドが使い物にならない」と言ってしまうのがおかしいと言う方が的外れじゃないか？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:21:07 <> <a href="../test/read.cgi/tech/1288342460/686" target="_blank">&gt;&gt;686</a> <br> スレッドのオーバーヘッドと思っているものは、実はGIL競合のオーバーヘッド。 <br> new-GIL で改善される。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:21:15 <> <a href="../test/read.cgi/tech/1288342460/678" target="_blank">&gt;&gt;678</a> <br> その辺はPerlだってRubyだって何ら変わらないだろ？ <br> PythonでもCPythonじゃなくてIronPythonならGILの制限はないんじゃなかったかな。 <br>  <br> 透過的な並列実行は手続き型言語より関数型言語のほうが有利だわなー。 <br> 言語処理系レベルで最初から念頭においた上で実装しないと後付では難しいんじゃないかな。 <br>  <br> Pythonは言語仕様そのものは比較的シンプルだから、 <br> そういった用途向けに処理系をゼロから作り直すことは不可能じゃないかも。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:25:33 <> <a href="../test/read.cgi/tech/1288342460/685" target="_blank">&gt;&gt;685</a> <br> バカの相手してやる俺超やさしいな <br>  <br> &gt; 1)は、<a href="../test/read.cgi/tech/1288342460/667" target="_blank">&gt;&gt;667</a> の「同時に実行出来るPythonのコードは1つ」を詳しくいっているだけ。 <br> 違う。余計なワードを挟んで定義を曖昧にして表現しているだけ。 <br> zlib圧縮はDLL呼び出しでPythonコードの実行じゃないだろうこのアンポンタン <br>  <br> 2)の指摘は意味不明。スレッドの「合計のCPUの使用率」？？ 何を言っているんだお前はｗ <br> 本当にGILを理解していればこんな間抜けな発言はしない <br>  <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:30:15 <> GILのことを全く知らない俺の妄想。 <br>  <br> GILの問題は、アムダールの法則的な問題である。 <br> つまりCPU-boundなときにパフォーマンスが落ちるだけで、 <br> そもそもそれを気にするなら動的言語を使うなって感じ。 <br> new-GILでそれが改善される。 <br>  <br> IO-boundな処理のときは、GILは性能にあんまし関係ない。 <br>  <br> って理解でOK。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:30:52 <> <a href="../test/read.cgi/tech/1288342460/690" target="_blank">&gt;&gt;690</a> <br> バ、バカって言う方がバカなんだからね <br> このバカ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:33:25 <> アスペルガーのみなさん。いいかげんにしてくだしあ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:36:12 <> 2人だけ周りが見えてないよな。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:39:09 <> <a href="../test/read.cgi/tech/1288342460/691" target="_blank">&gt;&gt;691</a> <br> 日本語でおk <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:40:45 <> <a href="../test/read.cgi/tech/1288342460/691" target="_blank">&gt;&gt;691</a> <br> 概ね合ってる <br> あと単純にスレッド数が多くても効率が落ちるよ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:44:52 <> <a href="../test/read.cgi/tech/1288342460/696" target="_blank">&gt;&gt;696</a> <br> ロック多発下で並列度を上げても性能はぜんぜーん向上しない <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-- アムダールの法則 <br> ってやつだね。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:45:06 <> まあインタプリタにヘビーな数値計算とかやらせるわけはないのだが <br> （Cや何かのライブラリを呼ばせるのはべつ） <br> PythonってI/O以外だとGIL握ったままなの？ <br>  <br> LLでテキスト処理はよくやるけど、それが重いこともある <br> テンプレート処理とかHTMLのパーシングとか <br>  <br> そういう場合はどうなるの <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:55:00 <> PythonやPyGTKを使ったアプリケーションはGPLになってしまうのですか？ <br> 商用ソフトなどは作れませんか？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 15:59:41 <> <a href="../test/read.cgi/tech/1288342460/699" target="_blank">&gt;&gt;699</a> <br> それはPyQtの話 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:00:28 <> GTKは糞 <br> 何度でも言うよ <br> GTKは糞 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:00:38 <> <a href="../test/read.cgi/tech/1288342460/698" target="_blank">&gt;&gt;698</a> <br> Posixスレッドと同じでtime()とかI/O待ちが発生するとスレッドのスイッチングが起きる <br> あとは命令ステップを一定数こなしたらGILによって勝手にスイッチングされる <br>  <br> 共有ライブラリ呼び出し時は Py_BEGIN_ALLOW_THREADS, Py_END_ALLOW_THREADSを正しく指定してあれば <br> GILを開放しマルチスレッドの恩恵を受けられる <br> なので、高速な並列化が必要な場合はその処理を共有ライブラリにしてctypsやswigなどで呼び出すのがいいかも <br>  <br> 管理スレッド数が多くなるとGILの効率が落ちる <br> プロセス負荷が高いとGIL自体の処理が滞るのでさらに悪循環に <br>  <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:05:04 <> <a href="../test/read.cgi/tech/1288342460/699" target="_blank">&gt;&gt;699</a> <br> Pythonは、PSFライセンスで、 <br> 商用の3Dソフトなんかにも組みこまれていることから分かるように、 <br> 商用利用可能。 <br>  <br> PyGTKはLGPLなので、静的リンクしなければ <br> 問題なしです。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:15:36 <> GILってなんでどうして必要なのはなぜ？ <br> GvRがバカだったせい？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:17:54 <> 参照カウンコ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:23:14 <> <a href="../test/read.cgi/tech/1288342460/649" target="_blank">&gt;&gt;649</a> <br> 最近はsqlite3にSQLAlchemyを使って保存してる <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:33:43 <> ORMなんて土方用ツールだろ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:51:42 <> さすが鬼の副長 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:53:04 <> それひじかたやない。どかたや。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 16:53:15 <> まさにscaffoldだしな <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:02:25 <> SQLAlchemyは良く知らんけど <br> djangoとかだとモデル修正したときに <br> syncdbしてもテーブル更新されないときがあるよね <br> 結局自分でテーブル直接メンテしないといけなくなる <br> SQLAlchemyはその必要も無くなってるのかな？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:02:57 <> <a href="../test/read.cgi/tech/1288342460/690" target="_blank">&gt;&gt;690</a> <br> &gt; 2)の指摘は意味不明。スレッドの「合計のCPUの使用率」？？ 何を言っているんだお前はｗ <br> &gt; 本当にGILを理解していればこんな間抜けな発言はしない <br>  <br> 1スレッド当たりのCPU使用率5%のスレッドが15個あった場合の話だよ。 <br> C言語でそのままスレッド使うと、たとえばLinuxのCFQスケジューラがバランス考えて <br> 実行権を渡してくれる。 <br> だが、GILがあるとOSのスケジューラが実行権を割り当ててくれても実行できない <br> スレッドがある。GIL待ちのスレッドにGILが与えられるタイミングはPythonインタプリタが <br> 制御していて、どのスレッドにGILを渡すかのスケジューリングがおバカなので、 <br> GILを長時間待たないといけないスレッドが出てきて、スループットが低下しなくても <br> 応答速度が低下する事がある。 <br>  <br> new-GIL は、GILを取得しようとしているスレッドの競合によるオーバーヘッドの低減と、 <br> スケジューリングの見直しで、スループットと応答性能を両方向上している。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:12:44 <> <a href="../test/read.cgi/tech/1288342460/698" target="_blank">&gt;&gt;698</a> <br> 全部、実装依存。GILを開放している部分は並列実行可能。 <br> HTMLのパースなら、lxmlを使えば、libxml2を使っている部分はGILを開放する。 <br>  <br> 文字列処理だと、標準ライブラリの正規表現はGILを開放しないな。 <br> 短時間だけGILを開放するとむしろスレッド切り替えのオーバーヘッドが生じるし、 <br> 実行時間がごく短い事が多い正規表現処理でGILを開放するべきかどうかは微妙だな。 <br> regexとかre2とかなら開放するかもしれない。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:24:11 <> <a href="../test/read.cgi/tech/1288342460/713" target="_blank">&gt;&gt;713</a> <br> なるほど <br> たとえばよくあるクローラみたいなものをPythonで作った場合 <br>  <br> キューからURLフェッチ→ダウンロード→HTMLのパース／処理 <br> →（必要に応じて）URLをキューに追加 <br>  <br> みたいなのを、並列で走らせたいかと思うのだけど <br> HTMLパース／処理にある程度時間を食う場合、そこでGILで刺さって <br> 直列化してしまうと、全体としてかなり並列度が落ちるので、 <br> どうなるかと思っていました <br>  <br> lxmlに丸投げなら大丈夫の可能性が高い、という感じなのかな？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:25:04 <> もう飽きた。 <>
714<>sage<>2011/01/13(木) 17:27:22 <> たとえばパースコードの中にGILをロックする処理があって <br> キューからフェッチしてDLを実行するまでの処理もGILをロックする処理がある場合、 <br>  <br> 上のスレッドのどれかがパースを実行中（GILをつかんでいる）間は、 <br> 他のスレッドが終了しても、キューからフェッチして次の処理をはじめられない <br> ですよね？ <br> 遊んでしまうことになる <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:27:31 <> GILをNGワードにした方が良いな <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:30:18 <> PythonスレでGILをNG Wordにするとか滑稽すぐる <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:47:26 <> <a href="../test/read.cgi/tech/1288342460/716" target="_blank">&gt;&gt;716</a> <br> パースにかかる時間は、WebのI/O待ちに比べたらカスみたいなもんだから <br> なんの問題もない。 <br>  <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:50:31 <> <a href="../test/read.cgi/tech/1288342460/719" target="_blank">&gt;&gt;719</a> <br> 要は、そこが実際に「カスといえる程度に軽い場合は」 <br> 直列化の問題を無視可能ということですね <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:52:45 <> 俺も、それと全く同じ構成のものを <br> エロ画像超並列ダウンローダとして作ったことがあるけど、 <br> ちゃんと爆速で動いたよ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 17:53:14 <> UIプログラミングではイベントコールバックは0.1秒以内に戻らなければならない <br> みたいなルールがあると思うけど <br> Pythonでは、GILを開放しない処理の場合、同様のルールに従わないと <br> 直列化してしまう、ということになるの？ <br>  <br> 何か勘違いしてる？ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 18:04:40 <> <a href="../test/read.cgi/tech/1288342460/722" target="_blank">&gt;&gt;722</a> <br> 外部ライブラリーをコールする時以外でGILを明示的に解放する事はまずない <br> 普通に書いたPythonコードはスレッドを使っても直列化は避けられない <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 18:12:29 <> ところで、Pythonのスレッドって擬似スレッドだよね <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 18:13:24 <> <a href="../test/read.cgi/tech/1288342460/721" target="_blank">&gt;&gt;721</a> <br> 逮捕 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 18:15:00 <> &gt;UIプログラミングではイベントコールバックは0.1秒以内に戻らなければならない <br> &gt;みたいなルールがあると思うけど  <br>  <br> ねーよ <br> あるとしたらダブルバッファリング用に一回のVSync以内に戻らないといけないことくらい <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 18:20:36 <> 例のプログラムの場合は、クロール速度の大幅な向上に寄与するのは、 <br> Web要求を並列に出すことであって、パースをマルチコアとかで並列化することではない。 <br> そんでもって、Web要求は、実行のほとんどがI/O waitで寝てるわけだから、 <br> 実行が直列化したって速度はぜんぜん低下しない。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 18:24:00 <> <a href="../test/read.cgi/tech/1288342460/726" target="_blank">&gt;&gt;726</a> <br> こういうのを知ったかぶりの低能という。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 18:28:01 <> <a href="../test/read.cgi/tech/1288342460/726" target="_blank">&gt;&gt;726</a> <br> イベントループ妨害したら、応答性悪くなるだろうが。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 19:23:08 <> <a href="../test/read.cgi/tech/1288342460/723" target="_blank">&gt;&gt;723</a> <br> 外部ライブラリーって具体的に何を指している？ <br> ソケットやファイルを含めて、osのブロックするAPI呼び出しとかは基本的にGIL開放しているよ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 19:28:07 <> そんな当たり前の事いわれてもなｗ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 19:36:08 <> 角電池角電池角電池角電池角電池角電池角電池角電池角電池角電池角電池 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 19:41:35 <> 角電池ネタはひと月に一回ぐらいでちょうどいい <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 19:48:24 <> 単三電池なら中学生のときに入れてみたことがある。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 20:15:02 <> <a href="../test/read.cgi/tech/1288342460/731" target="_blank">&gt;&gt;731</a> <br> いや、当たり前なんだけど、 <a href="../test/read.cgi/tech/1288342460/723" target="_blank">&gt;&gt;723</a> みたいな言い方をすると組み込みのオブジェクトを <br> 使ってる限りはGIL開放しないように読めちゃうじゃん。 <br> 普通に書いたPythonプログラムでもGILを開放しまくる事もある。 <br> スレッドを使うといつでもGILが邪魔してくるみたいな誤解を招く書きかたは良くない。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 21:37:25 <> 結論: パフォーマンスが欲しいならCで書け。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 21:39:54 <> 結論：アセンブラで書け <br>  <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 21:44:20 <> 結論：プログラム書いてる暇があるなら働け <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 22:10:21 <> Pythonはその内部でCで書かれた部分を呼び出す時は可能ならばGILを開放しているんだよ！ <br> だからPythonのスレッドは並列性が確保されてるんだよ！ <br>  <br> とでも言いたいのか？ <br>  <br> 組込み処理のホトンドはPythonで書かれたものでCの部分なんて非常に少ないぜ <br> それで並列性が十分に確保される訳がないだろうに <br> そもそも自分の書いたPythonソースに並列性を持たせられない時点で意味無いだろう <br> もうねアホかと・・・ <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 22:17:36 <> ちょっと何を言ってるのか分からないですね <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 22:35:02 <> <a href="../test/read.cgi/tech/1288342460/739" target="_blank">&gt;&gt;739</a> <br> お前マジで、アスペルガー症候群の典型例だから、 <br> 精神科でウェクスラー式知能検査受けてみたほうがいいよ。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 22:40:41 <> インフラはC++でやれよ <br> 業務でも趣味でもそれが当たり前 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 22:45:09 <> このレベルだと、自分では気づかないだろう。 <>
デフォルトの名無しさん<>sage<>2011/01/13(木) 22:48:20 <> C++使うとリーナスがキレるし。 <br> 個人的にもあれは終わってる言語だと思う。 <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 00:36:15 <> リーナスC++嫌ってるの？ <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 00:40:08 <> http://kerneltrap.org/node/2067 <br>  <br> kernel開発においてって文脈を考慮する必要はあるが <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 01:01:32 <> git開発でもc++野郎にキレてた <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 01:13:11 <> C++嫌ってない奴なんているの？ <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 01:32:01 <> <a href="../test/read.cgi/tech/1288342460/744" target="_blank">&gt;&gt;744</a> <br> 結局、今はLinuxカーネルの開発でC++は使われまくってるらしいよ <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 02:28:43 <> <a href="../test/read.cgi/tech/1288342460/749" target="_blank">&gt;&gt;749</a> <br> 少なくともlinuxカーネルのソースツリーの中には、 <br> C++のプログラムはkconfigのQt版のソースコードしかないよ？ <br> linuxカーネルのソースコードは全てC言語とアセンブラ。 <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 09:14:16 <> 何で嫌ってるの？ <br> C++使ったことないけど <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 09:20:04 <> 使いづらいからだろ。リナッカーはwinですら不自由だと騒いでるぐらいだからな <br>  <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 09:44:34 <> C++は言語研究の為の言語 <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 09:44:59 <> C++はじゃじゃ馬 <br> 乗りこなせれば言うことを聞く <br> 要するに騎手の腕次第 <br>  <br> Winは糞だが必要以上にWinを攻撃するLinuxerも糞 <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 09:48:07 <> Winのどこが糞なのか <br> MSの軟化はLinuxersのおかげってか <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 10:23:47 <> C++は、たとえばある人は例外使って別の人は例外使わずなるべく戻り値でエラー返したり、 <br> 人ごとに膨大な言語機能のサブセットを勝手に定義して使う言語だから、 <br> 多人数が参加するプロジェクトではコーディング規約をガッチリ決めないと <br> サブセットの定義の違いが混乱をもたらす。 <br> 一人で使ってる分には問題ない。 <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 10:25:46 <> そういやC++好きには孤独好きが多い気がする <br>  <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 10:28:15 <> prologよりまし <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 11:56:04 <> 一体何のスレだよと突っ込んでやろう <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 12:04:56 <> ニシキヘビについて学習するスレです <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 12:07:16 <> こんなの見つけた <br> ttp://www2s.biglobe.ne.jp/~nass/ <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 12:07:17 <> このスレの半分はPythonの話題でできています <>
デフォルトの名無しさん<>sage<>2011/01/14(金) 12:08:18 <> <a href="../test/read.cgi/tech/1288342460/761" target="_blank">&gt;&gt;761</a> <br> ぱそこんがぶつこわれた <>
